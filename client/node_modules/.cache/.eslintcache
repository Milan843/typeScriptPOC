[{"/home/milan/Milan/Projects/typescript-poc/client/src/index.tsx":"1","/home/milan/Milan/Projects/typescript-poc/client/src/reportWebVitals.ts":"2","/home/milan/Milan/Projects/typescript-poc/client/src/redux/store.ts":"3","/home/milan/Milan/Projects/typescript-poc/client/src/App.tsx":"4","/home/milan/Milan/Projects/typescript-poc/client/src/routes.tsx":"5","/home/milan/Milan/Projects/typescript-poc/client/src/redux/reducers/index.ts":"6","/home/milan/Milan/Projects/typescript-poc/client/src/components/LogIn.tsx":"7","/home/milan/Milan/Projects/typescript-poc/client/src/components/Register.tsx":"8","/home/milan/Milan/Projects/typescript-poc/client/src/redux/reducers/authReducer.ts":"9","/home/milan/Milan/Projects/typescript-poc/client/src/redux/reducers/userReducer.ts":"10","/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/auth.ts":"11","/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/types.ts":"12","/home/milan/Milan/Projects/typescript-poc/client/src/api/index.ts":"13","/home/milan/Milan/Projects/typescript-poc/client/src/api/config.ts":"14","/home/milan/Milan/Projects/typescript-poc/client/src/api/keys.ts":"15","/home/milan/Milan/Projects/typescript-poc/client/src/services.ts":"16","/home/milan/Milan/Projects/typescript-poc/client/src/api/axios.ts":"17","/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/error.ts":"18","/home/milan/Milan/Projects/typescript-poc/client/src/utils/yup.ts":"19","/home/milan/Milan/Projects/typescript-poc/client/src/components/Dashboard.tsx":"20","/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/user.ts":"21","/home/milan/Milan/Projects/typescript-poc/client/src/ProtectedRoute.tsx":"22","/home/milan/Milan/Projects/typescript-poc/client/src/components/UserDashboard.tsx":"23"},{"size":627,"mtime":1625120689224,"results":"24","hashOfConfig":"25"},{"size":425,"mtime":1624885382313,"results":"26","hashOfConfig":"25"},{"size":510,"mtime":1625032879837,"results":"27","hashOfConfig":"25"},{"size":304,"mtime":1625122446264,"results":"28","hashOfConfig":"25"},{"size":693,"mtime":1625175658321,"results":"29","hashOfConfig":"25"},{"size":295,"mtime":1625033155764,"results":"30","hashOfConfig":"25"},{"size":3277,"mtime":1625169085092,"results":"31","hashOfConfig":"25"},{"size":7103,"mtime":1625168335797,"results":"32","hashOfConfig":"25"},{"size":1010,"mtime":1625166592496,"results":"33","hashOfConfig":"25"},{"size":503,"mtime":1625174555827,"results":"34","hashOfConfig":"25"},{"size":3506,"mtime":1625173009041,"results":"35","hashOfConfig":"25"},{"size":550,"mtime":1625135806848,"results":"36","hashOfConfig":"25"},{"size":1404,"mtime":1625124748718,"results":"37","hashOfConfig":"25"},{"size":391,"mtime":1625135300750,"results":"38","hashOfConfig":"25"},{"size":126,"mtime":1625089201129,"results":"39","hashOfConfig":"25"},{"size":308,"mtime":1625089073304,"results":"40","hashOfConfig":"25"},{"size":536,"mtime":1625135322972,"results":"41","hashOfConfig":"25"},{"size":424,"mtime":1625135877405,"results":"42","hashOfConfig":"25"},{"size":692,"mtime":1625167971554,"results":"43","hashOfConfig":"25"},{"size":4728,"mtime":1625174257418,"results":"44","hashOfConfig":"25"},{"size":1344,"mtime":1625173074607,"results":"45","hashOfConfig":"25"},{"size":654,"mtime":1625171385033,"results":"46","hashOfConfig":"25"},{"size":6316,"mtime":1625175786241,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"a3anev",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/milan/Milan/Projects/typescript-poc/client/src/index.tsx",[],["100","101"],"/home/milan/Milan/Projects/typescript-poc/client/src/reportWebVitals.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/redux/store.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/App.tsx",[],"/home/milan/Milan/Projects/typescript-poc/client/src/routes.tsx",[],"/home/milan/Milan/Projects/typescript-poc/client/src/redux/reducers/index.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/components/LogIn.tsx",["102","103","104"],"import React, { useReducer, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginSchema } from \"../utils/yup\";\nimport { loginAction } from \"../redux/actions/auth\";\nimport { IRootState } from \"../redux/reducers/index\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: 400,\n      margin: `${theme.spacing(0)} auto`,\n    },\n    loginBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1,\n    },\n    header: {\n      textAlign: \"center\",\n      background: \"#212121\",\n      color: \"#fff\",\n    },\n    card: {\n      marginTop: theme.spacing(10),\n    },\n  })\n);\n\n//state type\n\ntype State = {\n  email: string;\n  password: string;\n};\n\nconst Login = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const isAuthenticated = useSelector(({ auth }: any) => auth.isAuthenticated);\n  console.log(isAuthenticated, \"Authentication\");\n\n  const initialValues: State = {\n    email: \"\",\n    password: \"\",\n  };\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/dashboard\");\n    }\n  }, [isAuthenticated]);\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: loginSchema,\n    onSubmit: (values) => {\n      console.log(values, \"val\");\n      dispatch(loginAction(values));\n    },\n  });\n\n  return (\n    <form className={classes.container} onSubmit={formik.handleSubmit}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.header} title=\"Login App\" />\n        <CardContent>\n          <div>\n            <TextField\n              fullWidth\n              id=\"email\"\n              type=\"email\"\n              label=\"email\"\n              placeholder=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              helperText={formik.errors.email}\n              margin=\"normal\"\n            />\n            <TextField\n              fullWidth\n              id=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              placeholder=\"Password\"\n              margin=\"normal\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              helperText={formik.errors.password}\n            />\n          </div>\n        </CardContent>\n\n        <CardActions>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            color=\"secondary\"\n            className={classes.loginBtn}\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </CardActions>\n\n        <Link to=\"/register\">\n          <Typography variant=\"caption\">Already Register!!</Typography>\n        </Link>\n      </Card>\n    </form>\n  );\n};\n\nexport default Login;\n","/home/milan/Milan/Projects/typescript-poc/client/src/components/Register.tsx",["105"],"import React, { useState, useEffect, Dispatch } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme, Typography } from \"@material-ui/core\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { useFormik } from \"formik\";\nimport { registerSchema } from \"../utils/yup\";\nimport { registerAction } from \"../redux/actions/auth\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: 400,\n      margin: `${theme.spacing(0)} auto`,\n    },\n    registerBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1,\n    },\n    header: {\n      textAlign: \"center\",\n      background: \"#212121\",\n      color: \"#fff\",\n    },\n    card: {\n      marginTop: theme.spacing(10),\n    },\n  })\n);\n\ninterface Values {\n  firstName: string;\n  email: string;\n  mobileNumber: string;\n  address: string;\n  password: string;\n  confirmPassword: string;\n  description: string;\n  userImage: string;\n}\n\nconst Register: React.FC = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch<Dispatch<any>>();\n  const [userImage, setUserImage] = useState(\"\");\n\n  const handleImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) {\n      return;\n    }\n    const file = e.target.files[0];\n    // const isValidFile = isUserImage(file);\n    // if (!isValidFile) {\n    //   setFormError({\n    //     ...formError,\n    //     userImage: { isValid: false, errorMsg: \"Enter valid image\" },\n    //     isFormValid: false,\n    //   });\n\n    //   return;\n    // }\n    // setFormError({\n    //   ...formError,\n    //   userImage: { isValid: true, errorMsg: \"Enter valid image\" },\n    //   isFormValid: true,\n    // });\n\n    const reader = new FileReader();\n\n    reader.onload = function (dataa: any) {\n      let dataURL = dataa.target.result;\n      dataURL = dataURL.replace(\";base64\", `;name=${file.name};base64`);\n      setUserImage(dataURL);\n\n      // setData({\n      // \t...data,\n      // \tuserImage: dataURL,\n      // });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const initialValues = {\n    firstName: \"\",\n    email: \"\",\n    mobileNumber: \"\",\n    address: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    description: \"\",\n  };\n  const formik: any = useFormik<any>({\n    initialValues: initialValues,\n    validationSchema: registerSchema,\n    onSubmit: (values: Values) => {\n      let payload = { ...values, userImage: userImage };\n      dispatch(\n        registerAction(payload, () => {\n          props.history.push(\"/\");\n        })\n      );\n      console.log(payload, \"submit\");\n    },\n  });\n  //   return (\n  //     <Formik\n  //       key=\"registerForm\"\n  //       initialValues={initialValues}\n  //       //   validationSchema={registerSchema}\n  //       validator={() => ({})}\n  //       onSubmit={(values: Values, { setSubmitting }: FormikHelpers<Values>) => {\n  //         setTimeout(() => {\n  //           alert(JSON.stringify(values, null, 2));\n  //           setSubmitting(false);\n  //         }, 500);\n  //       }}\n  //     >\n  //       {(props) => {\n  console.log(formik);\n  return (\n    <form className={classes.container} onSubmit={formik.handleSubmit}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.header} title=\"REGISTER\" />\n        <CardContent>\n          <div>\n            <TextField\n              fullWidth\n              id=\"firstName\"\n              type=\"text\"\n              label=\"firstName\"\n              placeholder=\"firstName\"\n              margin=\"normal\"\n              value={formik.values.firstName}\n              onChange={formik.handleChange}\n              helperText={formik.errors.firstName}\n            />\n            <TextField\n              fullWidth\n              id=\"email\"\n              type=\"email\"\n              label=\"email\"\n              placeholder=\"email\"\n              margin=\"normal\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              helperText={formik.errors.email}\n            />\n            <TextField\n              fullWidth\n              id=\"mobileNumber\"\n              type=\"text\"\n              label=\"Mobile Number\"\n              placeholder=\"Mobile Number\"\n              margin=\"normal\"\n              value={formik.values.mobileNumber}\n              onChange={formik.handleChange}\n              helperText={formik.errors.mobileNumber}\n            />\n            <TextField\n              fullWidth\n              id=\"address\"\n              type=\"text\"\n              label=\"Address\"\n              placeholder=\"Address\"\n              margin=\"normal\"\n              value={formik.values.address}\n              onChange={formik.handleChange}\n              helperText={formik.errors.address}\n            />\n            <TextField\n              fullWidth\n              id=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              placeholder=\"Password\"\n              margin=\"normal\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              helperText={formik.errors.password}\n            />\n            <TextField\n              fullWidth\n              id=\"confirmPassword\"\n              type=\"password\"\n              label=\"Confirm password\"\n              placeholder=\"Confirm password\"\n              margin=\"normal\"\n              value={formik.values.confirmPassword}\n              onChange={formik.handleChange}\n              helperText={formik.errors.confirmPassword}\n            />\n            <TextField\n              fullWidth\n              id=\"description\"\n              type=\"text\"\n              label=\"Description\"\n              placeholder=\"Description\"\n              margin=\"normal\"\n              value={formik.values.description}\n              onChange={formik.handleChange}\n              helperText={formik.errors.description}\n            />\n          </div>\n          <input\n            id=\"userImage\"\n            name=\"userImage\"\n            type=\"file\"\n            accept=\"image/*\"\n            // onChange={(event: any) => {\n            //   formik.setFieldValue(\"image\", event.currentTarget.files[0]);\n            // }}\n            onChange={handleImage}\n          />\n          {userImage && <img width=\"100%\" src={userImage} alt=\"\" />}\n        </CardContent>\n\n        <CardActions>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            color=\"secondary\"\n            className={classes.registerBtn}\n            type=\"submit\"\n          >\n            REGISTER\n          </Button>\n        </CardActions>\n        <Link to=\"/\">\n          <Typography variant=\"caption\">LOGIN PAGE</Typography>\n        </Link>\n      </Card>\n    </form>\n  );\n  //   }}\n  // </Formik>\n  //   );\n};\n\nexport default Register;\n","/home/milan/Milan/Projects/typescript-poc/client/src/redux/reducers/authReducer.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/redux/reducers/userReducer.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/auth.ts",["106","107","108","109"],"import { AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport Api from \"../../api/index\";\nimport axios from \"../../api/axios\";\nimport { setLocalStorage } from \"../../services\";\nimport { IAction, IUser, IConfigHeaders } from \"../../utils/interfaces\";\nimport {\n  LOGIN_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGOUT,\n  LOGIN_FAIL,\n} from \"./types\";\nimport { returnErrors } from \"./error\";\n\nimport Users from \"../../db/users.json\";\n\nexport const loginAction =\n  (payload: Object) => (dispatch: Dispatch<IAction>) => {\n    try {\n      const data = JSON.stringify({ ...payload });\n      console.log(payload, \"payloads\");\n      axios({\n        method: \"post\",\n        url: \"/login\",\n        data,\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((res) =>\n          dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res,\n          })\n        )\n        .catch((err) => {\n          dispatch(\n            returnErrors({ msg: err.data?.message }, err.status, \"LOGIN_FAIL\")\n          );\n          dispatch({\n            type: LOGIN_FAIL,\n          });\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  };\nexport const login =\n  ({ email, password }: IUser) =>\n  (dispatch: Dispatch<IAction>) => {\n    // Headers\n\n    // Request body\n    const data = JSON.stringify({ email, password });\n\n    axios({\n      method: \"post\",\n      url: \"/login\",\n      data,\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n\n      // headers: tokenConfig(getState)\n    })\n      // .post('/api/auth/login', body, config)\n      .then((res) =>\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: res,\n        })\n      )\n      .catch((err) => {\n        dispatch(\n          returnErrors({ msg: err.data?.message }, err.status, \"LOGIN_FAIL\")\n        );\n        dispatch({\n          type: LOGIN_FAIL,\n        });\n      });\n  };\nexport const registerAction =\n  (payload: object, cb: Function) => (dispatch: Dispatch<IAction>) => {\n    try {\n      const data = JSON.stringify({ ...payload });\n      console.log(data, \"payloadd\");\n\n      axios({\n        method: \"post\",\n        url: \"/signup\",\n        data,\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        // .post('/api/auth/register', body, config)\n        .then(\n          (res) =>\n            dispatch({\n              type: REGISTER_SUCCESS,\n              payload: res,\n            }),\n          cb()\n        )\n        .catch((err) => {\n          dispatch(\n            returnErrors(\n              { msg: err.data?.message },\n              err.status,\n              \"REGISTER_FAIL\"\n            )\n          );\n          dispatch({\n            type: REGISTER_FAIL,\n          });\n        });\n\n      // await Api.apiPost(\"signUp\", payload)\n      // cb();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const tokenConfig = (getState: Function) => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config: IConfigHeaders = {\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers[\"authorization\"] = `Bearer ${token}`;\n  }\n\n  return config;\n};\n\nexport const logoutAction: () => void =\n  () => async (dispatch: Dispatch<IAction>) => {\n    try {\n      localStorage.removeItem(\"token\");\n      dispatch({ type: LOGOUT });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n","/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/types.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/api/index.ts",[],["110","111"],"/home/milan/Milan/Projects/typescript-poc/client/src/api/config.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/api/keys.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/services.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/api/axios.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/error.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/utils/yup.ts",[],"/home/milan/Milan/Projects/typescript-poc/client/src/components/Dashboard.tsx",["112","113","114","115","116","117","118","119","120","121","122","123"],"/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/user.ts",["124"],"// import { AxiosResponse } from 'axios';\nimport { Dispatch } from \"redux\";\n// import Api from '../../api/index';\nimport { IAction } from \"../../utils/interfaces\";\nimport { GET_USERS } from \"./types\";\nimport { tokenConfig } from \"./auth\";\nimport axios from \"../../api/axios\";\nimport { returnErrors } from \"./error\";\n\nexport const usersListAction: () => void =\n  () => async (dispatch: Dispatch<IAction>) => {\n    try {\n      // const res:AxiosResponse<any> = await Api.apiGet(\"userList\")\n      // dispatch({ type: GET_USERS, payload: res.data })\n    } catch (err) {\n      console.log(err);\n    }\n  };\nexport const getUsers =\n  () => (dispatch: Dispatch<IAction>, getState: Function) => {\n    // dispatch(setItemsLoading());\n    axios({\n      method: \"get\",\n      url: \"/getUserList\",\n      ...tokenConfig(getState),\n    })\n      // .get('/api/items')\n      .then((res) =>\n        dispatch({\n          type: GET_USERS,\n          payload: res,\n        })\n      )\n      .catch((err) =>\n        dispatch(returnErrors({ msg: err.data?.message }, err.status))\n      );\n  };\n\nexport const deleteUserAction: (a: string) => void =\n  (args: string) => async (dispatch: any) => {\n    try {\n      // const res:AxiosResponse<any> = await Api.apiDelete(\"users\", args)\n      dispatch(usersListAction());\n    } catch (err) {\n      console.log(err);\n    }\n  };\n","/home/milan/Milan/Projects/typescript-poc/client/src/ProtectedRoute.tsx",[],"/home/milan/Milan/Projects/typescript-poc/client/src/components/UserDashboard.tsx",["125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":27},{"ruleId":"130","severity":1,"message":"134","line":15,"column":10,"nodeType":"132","messageId":"133","endLine":15,"endColumn":20},{"ruleId":"135","severity":1,"message":"136","line":63,"column":6,"nodeType":"137","endLine":63,"endColumn":23,"suggestions":"138"},{"ruleId":"130","severity":1,"message":"139","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"140","line":1,"column":10,"nodeType":"132","messageId":"133","endLine":1,"endColumn":23},{"ruleId":"130","severity":1,"message":"141","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":11},{"ruleId":"130","severity":1,"message":"142","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":25},{"ruleId":"130","severity":1,"message":"143","line":16,"column":8,"nodeType":"132","messageId":"133","endLine":16,"endColumn":13},{"ruleId":"126","replacedBy":"144"},{"ruleId":"128","replacedBy":"145"},{"ruleId":"130","severity":1,"message":"146","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":35},{"ruleId":"130","severity":1,"message":"147","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":17},{"ruleId":"130","severity":1,"message":"148","line":10,"column":22,"nodeType":"132","messageId":"133","endLine":10,"endColumn":32},{"ruleId":"130","severity":1,"message":"149","line":14,"column":3,"nodeType":"132","messageId":"133","endLine":14,"endColumn":19},{"ruleId":"130","severity":1,"message":"150","line":15,"column":3,"nodeType":"132","messageId":"133","endLine":15,"endColumn":18},{"ruleId":"130","severity":1,"message":"151","line":18,"column":10,"nodeType":"132","messageId":"133","endLine":18,"endColumn":16},{"ruleId":"130","severity":1,"message":"152","line":18,"column":18,"nodeType":"132","messageId":"133","endLine":18,"endColumn":22},{"ruleId":"130","severity":1,"message":"153","line":18,"column":24,"nodeType":"132","messageId":"133","endLine":18,"endColumn":34},{"ruleId":"130","severity":1,"message":"154","line":20,"column":10,"nodeType":"132","messageId":"133","endLine":20,"endColumn":29},{"ruleId":"130","severity":1,"message":"155","line":21,"column":10,"nodeType":"132","messageId":"133","endLine":21,"endColumn":23},{"ruleId":"130","severity":1,"message":"156","line":23,"column":10,"nodeType":"132","messageId":"133","endLine":23,"endColumn":28},{"ruleId":"135","severity":1,"message":"157","line":46,"column":6,"nodeType":"137","endLine":46,"endColumn":8,"suggestions":"158"},{"ruleId":"130","severity":1,"message":"159","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":19},{"ruleId":"130","severity":1,"message":"139","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"@typescript-eslint/no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'IRootState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["162"],"'useEffect' is defined but never used.","'AxiosResponse' is defined but never used.","'Api' is defined but never used.","'setLocalStorage' is defined but never used.","'Users' is defined but never used.",["160"],["161"],"'useState' is defined but never used.","'TableBody' is defined but never used.","'IconButton' is defined but never used.","'deleteUserAction' is defined but never used.","'usersListAction' is defined but never used.","'Delete' is defined but never used.","'Edit' is defined but never used.","'Visibility' is defined but never used.","'getFromLocalStorage' is defined but never used.","'USERS_LOADING' is defined but never used.","'IUserListDashBoard' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["163"],"'GET_USERS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [isAuthenticated, props.history]",{"range":"168","text":"169"},"Update the dependencies array to be: [dispatch]",{"range":"170","text":"171"},[1636,1653],"[isAuthenticated, props.history]",[1664,1666],"[dispatch]"]