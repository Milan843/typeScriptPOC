{"ast":null,"code":"import axios from \"../../api/axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGOUT } from \"./types\";\nimport { returnErrors } from \"./error\";\nexport const loginAction = payload => async dispatch => {\n  try {// const res:AxiosResponse<any> = await Api.apiGet(\"login\", payload)\n    // setLocalStorage(\"token\", JSON.stringify({id: res.data[0].id, name: res.data[0].firstname}));\n    // dispatch({ type: LOGIN_SUCCESS, payload: res.data[0]})\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const registerAction = (payload, cb) => dispatch => {\n  try {\n    const data = JSON.stringify({ ...payload\n    });\n    console.log(data, \"payloadd\");\n    axios({\n      method: \"post\",\n      url: \"/signup\",\n      data,\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }) // .post('/api/auth/register', body, config)\n    .then(res => dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res\n    }), cb()).catch(err => {\n      var _err$data;\n\n      dispatch(returnErrors({\n        msg: (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message\n      }, err.status, \"REGISTER_FAIL\"));\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }); // await Api.apiPost(\"signUp\", payload)\n    // cb();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const logoutAction = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: LOGOUT\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/auth.ts"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT","returnErrors","loginAction","payload","dispatch","err","console","log","registerAction","cb","data","JSON","stringify","method","url","headers","then","res","type","catch","msg","message","status","logoutAction","localStorage","removeItem"],"mappings":"AAGA,OAAOA,KAAP,MAAkB,iBAAlB;AAGA,SAEEC,gBAFF,EAGEC,aAHF,EAIEC,MAJF,QAKO,SALP;AAMA,SAASC,YAAT,QAA6B,SAA7B;AAIA,OAAO,MAAMC,WAAgC,GAC1CC,OAAD,IAAqB,MAAOC,QAAP,IAAuC;AAC1D,MAAI,CACF;AACA;AACA;AACD,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CATI;AAWP,OAAO,MAAMG,cAAc,GACzB,CAACL,OAAD,EAAkBM,EAAlB,KAAoCL,QAAD,IAAiC;AAClE,MAAI;AACF,UAAMM,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGT;AAAL,KAAf,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EAAkB,UAAlB;AAEAb,IAAAA,KAAK,CAAC;AACJgB,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,SAFD;AAGJJ,MAAAA,IAHI;AAIJK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAJL,KAAD,CAAL,CAQE;AARF,KASGC,IATH,CAUKC,GAAD,IACEb,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAEpB,gBADC;AAEPK,MAAAA,OAAO,EAAEc;AAFF,KAAD,CAXd,EAeIR,EAAE,EAfN,EAiBGU,KAjBH,CAiBUd,GAAD,IAAS;AAAA;;AACdD,MAAAA,QAAQ,CACNH,YAAY,CACV;AAAEmB,QAAAA,GAAG,eAAEf,GAAG,CAACK,IAAN,8CAAE,UAAUW;AAAjB,OADU,EAEVhB,GAAG,CAACiB,MAFM,EAGV,eAHU,CADN,CAAR;AAOAlB,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAEnB;AADC,OAAD,CAAR;AAGD,KA5BH,EAJE,CAkCF;AACA;AACD,GApCD,CAoCE,OAAOM,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAzCI;AA2CP,OAAO,MAAMkB,YAAwB,GACnC,MAAM,MAAOnB,QAAP,IAAuC;AAC3C,MAAI;AACFoB,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACArB,IAAAA,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;AACD,GAHD,CAGE,OAAOK,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CARI","sourcesContent":["import { AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport Api from \"../../api/index\";\nimport axios from \"../../api/axios\";\nimport { setLocalStorage } from \"../../services\";\nimport { IAction } from \"../../utils/interfaces\";\nimport {\n  LOGIN_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGOUT,\n} from \"./types\";\nimport { returnErrors } from \"./error\";\n\nimport Users from \"../../db/users.json\";\n\nexport const loginAction: (a: string) => void =\n  (payload: string) => async (dispatch: Dispatch<IAction>) => {\n    try {\n      // const res:AxiosResponse<any> = await Api.apiGet(\"login\", payload)\n      // setLocalStorage(\"token\", JSON.stringify({id: res.data[0].id, name: res.data[0].firstname}));\n      // dispatch({ type: LOGIN_SUCCESS, payload: res.data[0]})\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const registerAction =\n  (payload: object, cb: Function) => (dispatch: Dispatch<IAction>) => {\n    try {\n      const data = JSON.stringify({ ...payload });\n      console.log(data, \"payloadd\");\n\n      axios({\n        method: \"post\",\n        url: \"/signup\",\n        data,\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        // .post('/api/auth/register', body, config)\n        .then(\n          (res) =>\n            dispatch({\n              type: REGISTER_SUCCESS,\n              payload: res,\n            }),\n          cb()\n        )\n        .catch((err) => {\n          dispatch(\n            returnErrors(\n              { msg: err.data?.message },\n              err.status,\n              \"REGISTER_FAIL\"\n            )\n          );\n          dispatch({\n            type: REGISTER_FAIL,\n          });\n        });\n\n      // await Api.apiPost(\"signUp\", payload)\n      // cb();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const logoutAction: () => void =\n  () => async (dispatch: Dispatch<IAction>) => {\n    try {\n      localStorage.removeItem(\"token\");\n      dispatch({ type: LOGOUT });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}