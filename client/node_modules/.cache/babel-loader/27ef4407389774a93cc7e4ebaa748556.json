{"ast":null,"code":"import { LOGIN_SUCCESS, LOGOUT, REGISTER_SUCCESS, REGISTER_FAIL } from \"../actions/types\";\nconst initialState = {\n  isAuth: false,\n  isLoading: false,\n  user: null\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGOUT:\n      return { ...initialState\n      };\n\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token || \"\");\n      return { ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        token: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/redux/reducers/authReducer.ts"],"names":["LOGIN_SUCCESS","LOGOUT","REGISTER_SUCCESS","REGISTER_FAIL","initialState","isAuth","isLoading","user","userReducer","state","action","type","localStorage","setItem","payload","token","isAuthenticated","removeItem"],"mappings":"AAAA,SACEA,aADF,EAEEC,MAFF,EAGEC,gBAHF,EAIEC,aAJF,QAKO,kBALP;AAaA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,MAAM,EAAE,KADuB;AAE/BC,EAAAA,SAAS,EAAE,KAFoB;AAG/BC,EAAAA,IAAI,EAAE;AAHyB,CAAjC;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAiB,GAAGL,YAArB,EAAmCM,MAAnC,KAAuD;AACzE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,MAAL;AACE,aAAO,EACL,GAAGG;AADE,OAAP;;AAGF,SAAKJ,aAAL;AACA,SAAKE,gBAAL;AACEU,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,MAAM,CAACI,OAAP,CAAeC,KAAf,IAAwB,EAAtD;AACA,aAAO,EACL,GAAGN,KADE;AAEL,WAAGC,MAAM,CAACI,OAFL;AAGLE,QAAAA,eAAe,EAAE,IAHZ;AAILV,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKH,aAAL;AACES,MAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGR,KADE;AAELF,QAAAA,IAAI,EAAE,IAFD;AAGLS,QAAAA,eAAe,EAAE,KAHZ;AAILV,QAAAA,SAAS,EAAE,KAJN;AAKLS,QAAAA,KAAK,EAAE;AALF,OAAP;;AAOF;AACE,aAAON,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import {\n  LOGIN_SUCCESS,\n  LOGOUT,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from \"../actions/types\";\n\nimport { IUserRedux, actionTypes, IUser } from \"../../utils/interfaces\";\ninterface IAction {\n  type: actionTypes;\n  payload: IUser;\n}\n\nconst initialState: IUserRedux = {\n  isAuth: false,\n  isLoading: false,\n  user: null,\n};\n\nconst userReducer = (state: IUserRedux = initialState, action: IAction) => {\n  switch (action.type) {\n    case LOGOUT:\n      return {\n        ...initialState,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token || \"\");\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n      };\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        token: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}