{"ast":null,"code":"import axios from \"../../api/axios\";\nimport { LOGIN_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL, LOGOUT, LOGIN_FAIL } from \"./types\";\nimport { returnErrors } from \"./error\";\nexport const loginAction = payload => dispatch => {\n  try {\n    const data = JSON.stringify({ ...payload\n    });\n    console.log(payload, \"payloads\");\n    axios({\n      method: \"post\",\n      url: \"/login\",\n      data,\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(res => dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res\n    })).catch(err => {\n      var _err$data;\n\n      dispatch(returnErrors({\n        msg: (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message\n      }, err.status, \"LOGIN_FAIL\"));\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const login = ({\n  email,\n  password\n}) => dispatch => {\n  // Headers\n  // Request body\n  const data = JSON.stringify({\n    email,\n    password\n  });\n  axios({\n    method: \"post\",\n    url: \"/login\",\n    data,\n    headers: {\n      \"Content-type\": \"application/json\"\n    } // headers: tokenConfig(getState)\n\n  }) // .post('/api/auth/login', body, config)\n  .then(res => dispatch({\n    type: LOGIN_SUCCESS,\n    payload: res\n  })).catch(err => {\n    var _err$data2;\n\n    dispatch(returnErrors({\n      msg: (_err$data2 = err.data) === null || _err$data2 === void 0 ? void 0 : _err$data2.message\n    }, err.status, \"LOGIN_FAIL\"));\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  });\n};\nexport const registerAction = (payload, cb) => dispatch => {\n  try {\n    const data = JSON.stringify({ ...payload\n    });\n    console.log(data, \"payloadd\");\n    axios({\n      method: \"post\",\n      url: \"/signup\",\n      data,\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }) // .post('/api/auth/register', body, config)\n    .then(res => dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res\n    }), cb()).catch(err => {\n      var _err$data3;\n\n      dispatch(returnErrors({\n        msg: (_err$data3 = err.data) === null || _err$data3 === void 0 ? void 0 : _err$data3.message\n      }, err.status, \"REGISTER_FAIL\"));\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }); // await Api.apiPost(\"signUp\", payload)\n    // cb();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token; // Headers\n\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers[\"authorization\"] = `Bearer ${token}`;\n  }\n\n  return config;\n};\nexport const logoutAction = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: LOGOUT\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/auth.ts"],"names":["axios","LOGIN_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT","LOGIN_FAIL","returnErrors","loginAction","payload","dispatch","data","JSON","stringify","console","log","method","url","headers","then","res","type","catch","err","msg","message","status","login","email","password","registerAction","cb","tokenConfig","getState","token","auth","config","logoutAction","localStorage","removeItem"],"mappings":"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","sourcesContent":["import { AxiosResponse } from \"axios\";\nimport { Dispatch } from \"redux\";\nimport Api from \"../../api/index\";\nimport axios from \"../../api/axios\";\nimport { setLocalStorage } from \"../../services\";\nimport { IAction, IUser } from \"../../utils/interfaces\";\nimport {\n  LOGIN_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGOUT,\n  LOGIN_FAIL,\n} from \"./types\";\nimport { returnErrors } from \"./error\";\n\nimport Users from \"../../db/users.json\";\n\nexport const loginAction =\n  (payload: Object) => (dispatch: Dispatch<IAction>) => {\n    try {\n      const data = JSON.stringify({ ...payload });\n      console.log(payload, \"payloads\");\n      axios({\n        method: \"post\",\n        url: \"/login\",\n        data,\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((res) =>\n          dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res,\n          })\n        )\n        .catch((err) => {\n          dispatch(\n            returnErrors({ msg: err.data?.message }, err.status, \"LOGIN_FAIL\")\n          );\n          dispatch({\n            type: LOGIN_FAIL,\n          });\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  };\nexport const login =\n  ({ email, password }: IUser) =>\n  (dispatch: Dispatch<IAction>) => {\n    // Headers\n\n    // Request body\n    const data = JSON.stringify({ email, password });\n\n    axios({\n      method: \"post\",\n      url: \"/login\",\n      data,\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n\n      // headers: tokenConfig(getState)\n    })\n      // .post('/api/auth/login', body, config)\n      .then((res) =>\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: res,\n        })\n      )\n      .catch((err) => {\n        dispatch(\n          returnErrors({ msg: err.data?.message }, err.status, \"LOGIN_FAIL\")\n        );\n        dispatch({\n          type: LOGIN_FAIL,\n        });\n      });\n  };\nexport const registerAction =\n  (payload: object, cb: Function) => (dispatch: Dispatch<IAction>) => {\n    try {\n      const data = JSON.stringify({ ...payload });\n      console.log(data, \"payloadd\");\n\n      axios({\n        method: \"post\",\n        url: \"/signup\",\n        data,\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        // .post('/api/auth/register', body, config)\n        .then(\n          (res) =>\n            dispatch({\n              type: REGISTER_SUCCESS,\n              payload: res,\n            }),\n          cb()\n        )\n        .catch((err) => {\n          dispatch(\n            returnErrors(\n              { msg: err.data?.message },\n              err.status,\n              \"REGISTER_FAIL\"\n            )\n          );\n          dispatch({\n            type: REGISTER_FAIL,\n          });\n        });\n\n      // await Api.apiPost(\"signUp\", payload)\n      // cb();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const tokenConfig = (getState: Function) => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config: IConfigHeaders = {\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers[\"authorization\"] = `Bearer ${token}`;\n  }\n\n  return config;\n};\n\nexport const logoutAction: () => void =\n  () => async (dispatch: Dispatch<IAction>) => {\n    try {\n      localStorage.removeItem(\"token\");\n      dispatch({ type: LOGOUT });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}