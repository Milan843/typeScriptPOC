{"ast":null,"code":"import axios from \"../../api/axios\";\nimport { LOGIN_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL, LOGOUT, LOGIN_FAIL, USER_LOADING, USER_LOADED, AUTH_ERROR } from \"./types\";\nimport { returnErrors } from \"./error\";\nexport const loginAction = payload => dispatch => {\n  try {\n    const data = JSON.stringify({ ...payload\n    });\n    console.log(payload, \"payloads\");\n    axios({\n      method: \"post\",\n      url: \"/login\",\n      data,\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(res => dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res\n    })).catch(err => {\n      var _err$data;\n\n      dispatch(returnErrors({\n        msg: (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message\n      }, err.status, \"LOGIN_FAIL\"));\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const login = ({\n  email,\n  password\n}) => dispatch => {\n  const data = JSON.stringify({\n    email,\n    password\n  });\n  axios({\n    method: \"post\",\n    url: \"/login\",\n    data,\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).then(res => dispatch({\n    type: LOGIN_SUCCESS,\n    payload: res\n  })).catch(err => {\n    var _err$data2;\n\n    dispatch(returnErrors({\n      msg: (_err$data2 = err.data) === null || _err$data2 === void 0 ? void 0 : _err$data2.message\n    }, err.status, \"LOGIN_FAIL\"));\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  });\n};\nexport const registerAction = (payload, cb) => dispatch => {\n  try {\n    const data = JSON.stringify({ ...payload\n    });\n    console.log(data, \"payloadd\");\n    axios({\n      method: \"post\",\n      url: \"/signup\",\n      data,\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }) // .post('/api/auth/register', body, config)\n    .then(res => dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res\n    }), cb()).catch(err => {\n      var _err$data3;\n\n      dispatch(returnErrors({\n        msg: (_err$data3 = err.data) === null || _err$data3 === void 0 ? void 0 : _err$data3.message\n      }, err.status, \"REGISTER_FAIL\"));\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }); // await Api.apiPost(\"signUp\", payload)\n    // cb();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token; // Headers\n\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers[\"authorization\"] = `Bearer ${token}`;\n  }\n\n  return config;\n};\nexport const logoutAction = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: LOGOUT\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getUserById = _id => (dispatch, getState) => {\n  // User loading\n  dispatch({\n    type: USER_LOADING\n  });\n  axios({\n    method: \"get\",\n    url: \"/getUser\",\n    params: {\n      _id: _id || \"\"\n    },\n    ...tokenConfig(getState)\n  }).then(res => {\n    dispatch({\n      type: USER_LOADED,\n      payload: res.user\n    });\n    dispatch(returnErrors({\n      msg: \"User loaded successfully\"\n    }, 200));\n  }).catch(err => {\n    var _err$data4;\n\n    dispatch(returnErrors({\n      msg: (_err$data4 = err.data) === null || _err$data4 === void 0 ? void 0 : _err$data4.message\n    }, err.status));\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n};\nexport const editUserAction = ({\n  firstName,\n  email,\n  lastName,\n  address,\n  mobileNumber,\n  userImage,\n  description,\n  _id\n}) => (dispatch, getState) => {\n  // Headers\n  // Request body\n  const data = JSON.stringify({\n    firstName,\n    email,\n    lastName,\n    address,\n    mobileNumber,\n    userImage,\n    description,\n    userId: _id\n  });\n  axios({\n    method: \"post\",\n    url: \"/editUser\",\n    data,\n    ...tokenConfig(getState)\n  }).then(res => {\n    dispatch({\n      type: USER_LOADED,\n      payload: res.user\n    });\n    dispatch(returnErrors({\n      msg: \"User edited successfully\"\n    }, 200));\n  }).catch(err => {\n    var _err$data5;\n\n    dispatch(returnErrors({\n      msg: (_err$data5 = err.data) === null || _err$data5 === void 0 ? void 0 : _err$data5.message\n    }, err.status, \"EDIT_FAIL\"));\n  });\n};","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/auth.ts"],"names":["axios","LOGIN_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT","LOGIN_FAIL","USER_LOADING","USER_LOADED","AUTH_ERROR","returnErrors","loginAction","payload","dispatch","data","JSON","stringify","console","log","method","url","headers","then","res","type","catch","err","msg","message","status","login","email","password","registerAction","cb","tokenConfig","getState","token","auth","config","logoutAction","localStorage","removeItem","getUserById","_id","params","user","editUserAction","firstName","lastName","address","mobileNumber","userImage","description","userId"],"mappings":"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","sourcesContent":["import { Dispatch } from \"redux\";\nimport axios from \"../../api/axios\";\nimport { IAction, IUser, IConfigHeaders } from \"../../utils/interfaces\";\nimport {\n  LOGIN_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGOUT,\n  LOGIN_FAIL,\n  USER_LOADING,\n  USER_LOADED,\n  AUTH_ERROR,\n} from \"./types\";\nimport { returnErrors } from \"./error\";\n\nexport const loginAction =\n  (payload: Object) => (dispatch: Dispatch<IAction>) => {\n    try {\n      const data = JSON.stringify({ ...payload });\n      console.log(payload, \"payloads\");\n      axios({\n        method: \"post\",\n        url: \"/login\",\n        data,\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        .then((res) =>\n          dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res,\n          })\n        )\n        .catch((err) => {\n          dispatch(\n            returnErrors({ msg: err.data?.message }, err.status, \"LOGIN_FAIL\")\n          );\n          dispatch({\n            type: LOGIN_FAIL,\n          });\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  };\nexport const login =\n  ({ email, password }: IUser) =>\n  (dispatch: Dispatch<IAction>) => {\n    const data = JSON.stringify({ email, password });\n\n    axios({\n      method: \"post\",\n      url: \"/login\",\n      data,\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    })\n      .then((res) =>\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: res,\n        })\n      )\n      .catch((err) => {\n        dispatch(\n          returnErrors({ msg: err.data?.message }, err.status, \"LOGIN_FAIL\")\n        );\n        dispatch({\n          type: LOGIN_FAIL,\n        });\n      });\n  };\nexport const registerAction =\n  (payload: object, cb: Function) => (dispatch: Dispatch<IAction>) => {\n    try {\n      const data = JSON.stringify({ ...payload });\n      console.log(data, \"payloadd\");\n\n      axios({\n        method: \"post\",\n        url: \"/signup\",\n        data,\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      })\n        // .post('/api/auth/register', body, config)\n        .then(\n          (res) =>\n            dispatch({\n              type: REGISTER_SUCCESS,\n              payload: res,\n            }),\n          cb()\n        )\n        .catch((err) => {\n          dispatch(\n            returnErrors(\n              { msg: err.data?.message },\n              err.status,\n              \"REGISTER_FAIL\"\n            )\n          );\n          dispatch({\n            type: REGISTER_FAIL,\n          });\n        });\n\n      // await Api.apiPost(\"signUp\", payload)\n      // cb();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const tokenConfig = (getState: Function) => {\n  // Get token from localstorage\n  const token = getState().auth.token;\n\n  // Headers\n  const config: IConfigHeaders = {\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  };\n\n  // If token, add to headers\n  if (token) {\n    config.headers[\"authorization\"] = `Bearer ${token}`;\n  }\n\n  return config;\n};\n\nexport const logoutAction: () => void =\n  () => async (dispatch: Dispatch<IAction>) => {\n    try {\n      localStorage.removeItem(\"token\");\n      dispatch({ type: LOGOUT });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const getUserById =\n  (_id?: string) => (dispatch: Dispatch<IAction>, getState: Function) => {\n    // User loading\n    dispatch({ type: USER_LOADING });\n\n    axios({\n      method: \"get\",\n      url: \"/getUser\",\n      params: {\n        _id: _id || \"\",\n      },\n      ...tokenConfig(getState),\n    })\n      .then((res: any) => {\n        dispatch({\n          type: USER_LOADED,\n          payload: res.user,\n        });\n\n        dispatch(returnErrors({ msg: \"User loaded successfully\" }, 200));\n      })\n      .catch((err) => {\n        dispatch(returnErrors({ msg: err.data?.message }, err.status));\n        dispatch({\n          type: AUTH_ERROR,\n        });\n      });\n  };\n\nexport const editUserAction =\n  ({\n    firstName,\n    email,\n    lastName,\n    address,\n    mobileNumber,\n    userImage,\n    description,\n    _id,\n  }: any) =>\n  (dispatch: Dispatch<IAction>, getState: Function) => {\n    // Headers\n\n    // Request body\n    const data = JSON.stringify({\n      firstName,\n      email,\n      lastName,\n      address,\n      mobileNumber,\n      userImage,\n      description,\n      userId: _id,\n    });\n\n    axios({\n      method: \"post\",\n      url: \"/editUser\",\n      data,\n      ...tokenConfig(getState),\n    })\n      .then((res: any) => {\n        dispatch({\n          type: USER_LOADED,\n          payload: res.user,\n        });\n\n        dispatch(returnErrors({ msg: \"User edited successfully\" }, 200));\n      })\n      .catch((err) => {\n        dispatch(\n          returnErrors({ msg: err.data?.message }, err.status, \"EDIT_FAIL\")\n        );\n      });\n  };\n"]},"metadata":{},"sourceType":"module"}