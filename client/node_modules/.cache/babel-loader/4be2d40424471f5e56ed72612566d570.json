{"ast":null,"code":"import { LOGOUT } from './types';\nimport Users from \"../../db/users.json\";\nexport const loginAction = payload => async dispatch => {\n  try {// const res:AxiosResponse<any> = await Api.apiGet(\"login\", payload)\n    // setLocalStorage(\"token\", JSON.stringify({id: res.data[0].id, name: res.data[0].firstname}));\n    // dispatch({ type: LOGIN_SUCCESS, payload: res.data[0]})\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const registerAction = (payload, cb) => async () => {\n  try {\n    console.log(payload, Users, \"payloadd\");\n    const data = JSON.stringify(payload);\n    axios({\n      method: 'post',\n      url: '/signup',\n      data,\n      headers: {\n        'Content-type': 'application/json'\n      } // headers: tokenConfig(getState)\n\n    }) // .post('/api/auth/register', body, config)\n    .then(res => dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res\n    })).catch(err => {\n      var _err$data;\n\n      dispatch(returnErrors({\n        msg: (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message\n      }, err.status, 'REGISTER_FAIL'));\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }); // await Api.apiPost(\"signUp\", payload)\n    // cb();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const logoutAction = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: LOGOUT\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/auth.ts"],"names":["LOGOUT","Users","loginAction","payload","dispatch","err","console","log","registerAction","cb","data","JSON","stringify","axios","method","url","headers","then","res","type","REGISTER_SUCCESS","catch","returnErrors","msg","message","status","REGISTER_FAIL","logoutAction","localStorage","removeItem"],"mappings":"AAKA,SAAwBA,MAAxB,QAAsC,SAAtC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAO,MAAMC,WAA+B,GAAIC,OAAD,IAAoB,MAAOC,QAAP,IAAuC;AACtG,MAAI,CACA;AACA;AACA;AACH,GAJD,CAIE,OAAOC,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CARM;AAUP,OAAO,MAAMG,cAAgD,GAAG,CAACL,OAAD,EAAiBM,EAAjB,KAAkC,YAAY;AAC1G,MAAI;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAqBF,KAArB,EAA4B,UAA5B;AACA,UAAMS,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAAb;AAEEU,IAAAA,KAAK,CAAC;AACJC,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,SAFD;AAGJL,MAAAA,IAHI;AAIJM,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAJL,CAOJ;;AAPI,KAAD,CAAL,CASE;AATF,KAUGC,IAVH,CAUSC,GAAD,IACJd,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAEC,gBADC;AAEPjB,MAAAA,OAAO,EAAEe;AAFF,KAAD,CAXZ,EAgBGG,KAhBH,CAgBUhB,GAAD,IAAS;AAAA;;AACdD,MAAAA,QAAQ,CAACkB,YAAY,CAAC;AAACC,QAAAA,GAAG,eAAClB,GAAG,CAACK,IAAL,8CAAC,UAAUc;AAAf,OAAD,EAA0BnB,GAAG,CAACoB,MAA9B,EAAsC,eAAtC,CAAb,CAAR;AACArB,MAAAA,QAAQ,CAAC;AACPe,QAAAA,IAAI,EAAEO;AADC,OAAD,CAAR;AAGD,KArBH,EAJF,CA2BA;AACA;AACH,GA7BD,CA6BE,OAAOrB,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAjCM;AAmCP,OAAO,MAAMsB,YAAwB,GAAG,MAAM,MAAOvB,QAAP,IAAuC;AACjF,MAAI;AACAwB,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAzB,IAAAA,QAAQ,CAAC;AAAEe,MAAAA,IAAI,EAAEnB;AAAR,KAAD,CAAR;AACH,GAHD,CAGE,OAAOK,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAPM","sourcesContent":["import { AxiosResponse } from 'axios';\nimport { Dispatch } from 'redux';\nimport Api from '../../api/index';\nimport { setLocalStorage } from '../../services';\nimport { IAction } from '../../utils/interfaces';\nimport { LOGIN_SUCCESS, LOGOUT } from './types';\nimport Users from \"../../db/users.json\"\n\nexport const loginAction: (a:string) => void = (payload:string) => async (dispatch: Dispatch<IAction>) => {\n    try {\n        // const res:AxiosResponse<any> = await Api.apiGet(\"login\", payload)\n        // setLocalStorage(\"token\", JSON.stringify({id: res.data[0].id, name: res.data[0].firstname}));\n        // dispatch({ type: LOGIN_SUCCESS, payload: res.data[0]})\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const registerAction: (a: object, b: Function) => void = (payload:object, cb: Function) => async () => {\n    try {\n        console.log(payload, Users, \"payloadd\");\n        const data = JSON.stringify(payload);\n      \n          axios({\n            method: 'post',\n            url: '/signup',\n            data,\n            headers: {\n              'Content-type': 'application/json',\n            },\n            // headers: tokenConfig(getState)\n          })\n            // .post('/api/auth/register', body, config)\n            .then((res) =>\n              dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res,\n              })\n            )\n            .catch((err) => {\n              dispatch(returnErrors({msg:err.data?.message}, err.status, 'REGISTER_FAIL'));\n              dispatch({\n                type: REGISTER_FAIL,\n              });\n            });\n        \n        // await Api.apiPost(\"signUp\", payload)\n        // cb();\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const logoutAction: () => void = () => async (dispatch: Dispatch<IAction>) => {\n    try {\n        localStorage.removeItem(\"token\");\n        dispatch({ type: LOGOUT })\n    } catch (err) {\n        console.log(err);\n    }\n}"]},"metadata":{},"sourceType":"module"}