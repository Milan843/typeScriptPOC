{"ast":null,"code":"var _jsxFileName = \"/home/milan/Milan/Projects/typescript-poc/client/src/components/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\n// import React, { Dispatch, useState } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableContainer from \"@material-ui/core/TableContainer\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Paper from \"@material-ui/core/Paper\";\n// import { Box, Theme, IconButton } from \"@material-ui/core\";\n// import { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//   deleteUserAction,\n//   usersListAction,\n//   //   setActiveUserAction,\n// } from \"../redux/actions/user\";\n// import { Delete, Edit, Visibility } from \"@material-ui/icons\";\n// // import Alert from \"../components/common/Alert\";\n// import { getFromLocalStorage } from \"../services\";\n// import { USERS_LOADING } from \"../redux/actions/types\";\n// import { getUsers } from \"../redux/actions/user\";\n// import { IUserListDashBoard } from \"../utils/interfaces\";\n// const useStyles = makeStyles((theme: Theme) => ({\n//   table: {\n//     minWidth: 650,\n//   },\n//   dashboard_container: {\n//     padding: theme.spacing(5),\n//   },\n// }));\n// const Dashboard = (props: any) => {\n//   const classes = useStyles();\n//   const dispatch = useDispatch<Dispatch<any>>();\n//   //   const [activeId, setActiveId] = useState(-1);\n//   //   const [showAlert, setShowAlert] = useState(false);\n//   //   const loggedInUser = JSON.parse(getFromLocalStorage(\"token\") || \"\");\n//   let allUsers = [];\n//   allUsers = useSelector(({ users }: any) => users);\n//   console.log(allUsers);\n//   useEffect(() => {\n//     dispatch(getUsers());\n//   }, []);\n//   //   useEffect(() => {\n//   //     dispatch(usersListAction());\n//   //     // eslint-disable-next-line\n//   //   }, []);\n//   //   const handleDelete = (id: number) => {\n//   //     setActiveId(id);\n//   //     toggleAlert();\n//   //   };\n//   //   const handleView = (id: number, path: string) => {\n//   //     let user = users.find((item: any) => item.id === id);\n//   //     // dispatch(setActiveUserAction(user));\n//   //     props.history.push(`/${path}/${id}`);\n//   //   };\n//   //   const toggleAlert = () => {\n//   //     setShowAlert((prev: Boolean) => !prev);\n//   //   };\n//   //   const onConfirm = () => {\n//   //     dispatch(deleteUserAction(`/${activeId}`));\n//   //     toggleAlert();\n//   //   };\n//   return (\n//     <>\n//       <div>hello</div>\n//       {/* <Alert\n//         open={showAlert}\n//         message={\"Are you sure you want to delete this user ?\"}\n//         onConfirm={onConfirm}\n//         onCancel={toggleAlert}\n//         showActions={true}\n//       /> */}\n//       <Box className={classes.dashboard_container}>\n//         <TableContainer component={Paper}>\n//           <Table className={classes.table} aria-label=\"simple table\">\n//             <TableHead>\n//               <TableRow>\n//                 <TableCell>First Name</TableCell>\n//                 <TableCell align=\"left\">Email</TableCell>\n//                 <TableCell align=\"left\">Address</TableCell>\n//                 <TableCell align=\"left\">Actions</TableCell>\n//               </TableRow>\n//             </TableHead>\n//             {/* <TableBody>\n//               {users?.map((row: any) => (\n//                 <TableRow key={row.id}>\n//                   <TableCell component=\"th\" scope=\"row\">\n//                     {row.firstname}\n//                   </TableCell>\n//                   <TableCell align=\"left\">{row.email}</TableCell>\n//                   <TableCell align=\"left\">{row.address}</TableCell>\n//                   <TableCell align=\"left\">\n//                     {loggedInUser.role === \"admin\" && (\n//                       <IconButton\n//                         color=\"primary\"\n//                         size=\"small\"\n//                         aria-label=\"upload picture\"\n//                         // onClick={() => handleView(row.id, \"edit\")}\n//                       >\n//                         <Edit />\n//                       </IconButton>\n//                     )}\n//                     <IconButton\n//                       color=\"primary\"\n//                       size=\"small\"\n//                       aria-label=\"upload picture\"\n//                       //   onClick={() => handleView(row.id, \"view\")}\n//                     >\n//                       <Visibility />\n//                     </IconButton>\n//                     <IconButton\n//                       color=\"secondary\"\n//                       size=\"small\"\n//                       aria-label=\"upload picture\"\n//                       //   onClick={() => handleDelete(row.id)}\n//                     >\n//                       <Delete />\n//                     </IconButton>\n//                   </TableCell>\n//                 </TableRow>\n//               ))}\n//             </TableBody> */}\n//           </Table>\n//         </TableContainer>\n//       </Box>\n//     </>\n//   );\n// };\n// export default Dashboard;\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport clsx from \"clsx\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Button from \"@material-ui/core/Button\"; // import { useSelector } from \"react-redux\";\n// import { store } from \"../store/store\";\n// import { loggedUser, isLogged, deleteUser } from \"../redux/actions\";\n// import { useHistory } from \"react-router-dom\";\n\nimport SearchBar from \"material-ui-search-bar\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../flux/actions/authActions\";\nimport { clearErrors } from \"../flux/actions/errorActions\";\nimport { getUsers, deleteUser } from \"../flux/actions/userListActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import ViewAdmin from \"./ViewAdmin\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  media: {\n    width: \"100%\"\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\"\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\nconst UserList = ({\n  getUsers,\n  deleteUser,\n  auth,\n  error,\n  logout,\n  clearErrors,\n  users,\n  history\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [searched, setSearched] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false); // const { users } = useSelector((state) => state);\n\n  const [data, setdata] = React.useState([]); // const [selectedUser, setselectedUser] = React.useState();\n  // let history = useHistory();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  useEffect(() => {\n    setdata(users);\n  }, [users]);\n\n  const requestSearch = searchedVal => {\n    if (searchedVal !== \"\") {\n      const filteredRows = users.filter(row => {\n        var _row$mobileNumber, _row$firstName, _row$lastName;\n\n        return row.email.toLowerCase().includes(searchedVal.toLowerCase()) || ((_row$mobileNumber = row.mobileNumber) === null || _row$mobileNumber === void 0 ? void 0 : _row$mobileNumber.includes(searchedVal.toLowerCase())) || ((_row$firstName = row.firstName) === null || _row$firstName === void 0 ? void 0 : _row$firstName.toLowerCase().includes(searchedVal.toLowerCase())) || ((_row$lastName = row.lastName) === null || _row$lastName === void 0 ? void 0 : _row$lastName.toLowerCase().includes(searchedVal.toLowerCase()));\n      });\n      setdata(filteredRows);\n    } else {\n      setdata(users);\n    }\n  };\n\n  const cancelSearch = () => {\n    setSearched(\"\");\n    requestSearch(\"searched\");\n    setdata(users);\n  }; // const signOut = () => {\n  // \tstore.dispatch(isLogged(false));\n  // \thistory.push(\"/login\");\n  // };\n  // const ViewUser = (person) => {\n  // \tsetselectedUser(person);\n  // \tconsole.log(switcher);\n  // \tsetswitcher(true);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"absolute\",\n      className: clsx(classes.appBar, open && classes.appBarShift),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: handleDrawerOpen,\n          className: clsx(classes.menuButton, open && classes.menuButtonHidden),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h6\",\n          color: \"inherit\",\n          noWrap: true,\n          className: classes.title,\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Sign out\",\n          \"aria-label\": \"add\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"inherit\",\n              onClick: logout,\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                color: \"secondary\",\n                children: /*#__PURE__*/_jsxDEV(ExitToAppIcon, {\n                  style: {\n                    color: \"white\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      classes: {\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n      },\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolbarIcon,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDrawerClose,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appBarSpacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 8,\n            lg: 9\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 4,\n            lg: 3,\n            children: /*#__PURE__*/_jsxDEV(Paper, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [\"(\", /*#__PURE__*/_jsxDEV(Paper, {\n              className: classes.paper,\n              children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n                value: searched,\n                onChange: searchVal => requestSearch(searchVal),\n                onCancelSearch: () => cancelSearch()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Table, {\n                  size: \"small\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    children: /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Profile\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 415,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Email\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 417,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: \"Phone\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 419,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: \"Action\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 420,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: data.map((user, id) => /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        children: user.userImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                          width: \"40%\",\n                          className: classes.media,\n                          src: user.userImage,\n                          alt: \"\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 428,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 426,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: (user === null || user === void 0 ? void 0 : user.firstName) + \" \" + (user === null || user === void 0 ? void 0 : user.lastName)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 436,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: user.email\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: user.Address\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 440,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: user.mobileNumber\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        align: \"right\",\n                        children: [/*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          onClick: () => history.push(`/userDashboard?_id=${user._id}`),\n                          color: \"primary\",\n                          children: \"View\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 443,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"contained\",\n                          onClick: () => user._id && deleteUser(user._id),\n                          color: \"secondary\",\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 452,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 442,\n                        columnNumber: 27\n                      }, this)]\n                    }, user.email + \"_\" + id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.seeMore\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 336,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"Gf0D5NcnqnxAtw/vnoi9VHPk/1M=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserList;\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  error: state.error,\n  users: state.userList.users\n});\n\nexport default connect(mapStateToProps, {\n  getUsers,\n  deleteUser,\n  logout,\n  clearErrors\n})(UserList);\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/components/Dashboard.tsx"],"names":["React","useEffect","Link","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","CssBaseline","Drawer","AppBar","Toolbar","List","Typography","Divider","IconButton","Badge","Container","Grid","Paper","MenuIcon","ChevronLeftIcon","Tooltip","clsx","ExitToAppIcon","Button","SearchBar","connect","logout","clearErrors","getUsers","deleteUser","drawerWidth","useStyles","theme","seeMore","marginTop","spacing","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","media","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","UserList","auth","error","users","history","classes","searched","setSearched","useState","open","setOpen","data","setdata","handleDrawerOpen","handleDrawerClose","requestSearch","searchedVal","filteredRows","filter","row","email","toLowerCase","includes","mobileNumber","firstName","lastName","cancelSearch","color","searchVal","map","user","id","userImage","Address","push","_id","mapStateToProps","state","userList"],"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","sourcesContent":["// import React, { Dispatch, useState } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Table from \"@material-ui/core/Table\";\n// import TableBody from \"@material-ui/core/TableBody\";\n// import TableCell from \"@material-ui/core/TableCell\";\n// import TableContainer from \"@material-ui/core/TableContainer\";\n// import TableHead from \"@material-ui/core/TableHead\";\n// import TableRow from \"@material-ui/core/TableRow\";\n// import Paper from \"@material-ui/core/Paper\";\n// import { Box, Theme, IconButton } from \"@material-ui/core\";\n// import { useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import {\n//   deleteUserAction,\n//   usersListAction,\n//   //   setActiveUserAction,\n// } from \"../redux/actions/user\";\n// import { Delete, Edit, Visibility } from \"@material-ui/icons\";\n// // import Alert from \"../components/common/Alert\";\n// import { getFromLocalStorage } from \"../services\";\n// import { USERS_LOADING } from \"../redux/actions/types\";\n// import { getUsers } from \"../redux/actions/user\";\n// import { IUserListDashBoard } from \"../utils/interfaces\";\n\n// const useStyles = makeStyles((theme: Theme) => ({\n//   table: {\n//     minWidth: 650,\n//   },\n//   dashboard_container: {\n//     padding: theme.spacing(5),\n//   },\n// }));\n\n// const Dashboard = (props: any) => {\n//   const classes = useStyles();\n//   const dispatch = useDispatch<Dispatch<any>>();\n//   //   const [activeId, setActiveId] = useState(-1);\n//   //   const [showAlert, setShowAlert] = useState(false);\n\n//   //   const loggedInUser = JSON.parse(getFromLocalStorage(\"token\") || \"\");\n//   let allUsers = [];\n//   allUsers = useSelector(({ users }: any) => users);\n//   console.log(allUsers);\n//   useEffect(() => {\n//     dispatch(getUsers());\n//   }, []);\n//   //   useEffect(() => {\n//   //     dispatch(usersListAction());\n//   //     // eslint-disable-next-line\n//   //   }, []);\n\n//   //   const handleDelete = (id: number) => {\n//   //     setActiveId(id);\n//   //     toggleAlert();\n//   //   };\n\n//   //   const handleView = (id: number, path: string) => {\n//   //     let user = users.find((item: any) => item.id === id);\n//   //     // dispatch(setActiveUserAction(user));\n//   //     props.history.push(`/${path}/${id}`);\n//   //   };\n\n//   //   const toggleAlert = () => {\n//   //     setShowAlert((prev: Boolean) => !prev);\n//   //   };\n\n//   //   const onConfirm = () => {\n//   //     dispatch(deleteUserAction(`/${activeId}`));\n//   //     toggleAlert();\n//   //   };\n\n//   return (\n//     <>\n//       <div>hello</div>\n//       {/* <Alert\n//         open={showAlert}\n//         message={\"Are you sure you want to delete this user ?\"}\n//         onConfirm={onConfirm}\n//         onCancel={toggleAlert}\n//         showActions={true}\n//       /> */}\n//       <Box className={classes.dashboard_container}>\n//         <TableContainer component={Paper}>\n//           <Table className={classes.table} aria-label=\"simple table\">\n//             <TableHead>\n//               <TableRow>\n//                 <TableCell>First Name</TableCell>\n//                 <TableCell align=\"left\">Email</TableCell>\n//                 <TableCell align=\"left\">Address</TableCell>\n//                 <TableCell align=\"left\">Actions</TableCell>\n//               </TableRow>\n//             </TableHead>\n//             {/* <TableBody>\n//               {users?.map((row: any) => (\n//                 <TableRow key={row.id}>\n//                   <TableCell component=\"th\" scope=\"row\">\n//                     {row.firstname}\n//                   </TableCell>\n//                   <TableCell align=\"left\">{row.email}</TableCell>\n//                   <TableCell align=\"left\">{row.address}</TableCell>\n//                   <TableCell align=\"left\">\n//                     {loggedInUser.role === \"admin\" && (\n//                       <IconButton\n//                         color=\"primary\"\n//                         size=\"small\"\n//                         aria-label=\"upload picture\"\n//                         // onClick={() => handleView(row.id, \"edit\")}\n//                       >\n//                         <Edit />\n//                       </IconButton>\n//                     )}\n//                     <IconButton\n//                       color=\"primary\"\n//                       size=\"small\"\n//                       aria-label=\"upload picture\"\n//                       //   onClick={() => handleView(row.id, \"view\")}\n//                     >\n//                       <Visibility />\n//                     </IconButton>\n//                     <IconButton\n//                       color=\"secondary\"\n//                       size=\"small\"\n//                       aria-label=\"upload picture\"\n//                       //   onClick={() => handleDelete(row.id)}\n//                     >\n//                       <Delete />\n//                     </IconButton>\n//                   </TableCell>\n//                 </TableRow>\n//               ))}\n//             </TableBody> */}\n//           </Table>\n//         </TableContainer>\n//       </Box>\n//     </>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport clsx from \"clsx\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Button from \"@material-ui/core/Button\";\n// import { useSelector } from \"react-redux\";\n// import { store } from \"../store/store\";\n// import { loggedUser, isLogged, deleteUser } from \"../redux/actions\";\n// import { useHistory } from \"react-router-dom\";\n\nimport SearchBar from \"material-ui-search-bar\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../flux/actions/authActions\";\nimport { clearErrors } from \"../flux/actions/errorActions\";\nimport { getUsers, deleteUser } from \"../flux/actions/userListActions\";\nimport { IUserListDashBoard, IRootState, IUser } from \"../types/interfaces\";\n// import ViewAdmin from \"./ViewAdmin\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  media: {\n    width: \"100%\",\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nconst UserList: React.FC<IUserListDashBoard> = ({\n  getUsers,\n  deleteUser,\n  auth,\n  error,\n  logout,\n  clearErrors,\n  users,\n  history,\n}) => {\n  const classes = useStyles();\n  const [searched, setSearched] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  // const { users } = useSelector((state) => state);\n  const [data, setdata] = React.useState<IUser[]>([]);\n  // const [selectedUser, setselectedUser] = React.useState();\n\n  // let history = useHistory();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  useEffect(() => {\n    setdata(users);\n  }, [users]);\n\n  const requestSearch = (searchedVal: string) => {\n    if (searchedVal !== \"\") {\n      const filteredRows = users.filter((row) => {\n        return (\n          row.email.toLowerCase().includes(searchedVal.toLowerCase()) ||\n          row.mobileNumber?.includes(searchedVal.toLowerCase()) ||\n          row.firstName?.toLowerCase().includes(searchedVal.toLowerCase()) ||\n          row.lastName?.toLowerCase().includes(searchedVal.toLowerCase())\n        );\n      });\n      setdata(filteredRows);\n    } else {\n      setdata(users);\n    }\n  };\n\n  const cancelSearch = () => {\n    setSearched(\"\");\n    requestSearch(\"searched\");\n    setdata(users);\n  };\n\n  // const signOut = () => {\n  // \tstore.dispatch(isLogged(false));\n  // \thistory.push(\"/login\");\n  // };\n\n  // const ViewUser = (person) => {\n  // \tsetselectedUser(person);\n  // \tconsole.log(switcher);\n  // \tsetswitcher(true);\n  // };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Dashboard\n          </Typography>\n          <Tooltip title=\"Sign out\" aria-label=\"add\">\n            <Link to=\"/\">\n              <IconButton color=\"inherit\" onClick={logout}>\n                <Badge color=\"secondary\">\n                  <ExitToAppIcon style={{ color: \"white\" }} />\n                </Badge>\n              </IconButton>\n            </Link>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{}</List>\n        <Divider />\n        <List>{}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={8} lg={9}></Grid>\n            {/* Recent Deposits */}\n            <Grid item xs={12} md={4} lg={3}>\n              <Paper></Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              (\n              <Paper className={classes.paper}>\n                <SearchBar\n                  value={searched}\n                  onChange={(searchVal) => requestSearch(searchVal)}\n                  onCancelSearch={() => cancelSearch()}\n                />\n                <React.Fragment>\n                  <Table size=\"small\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Profile</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Email</TableCell>\n                        <TableCell>Address</TableCell>\n                        <TableCell>Phone</TableCell>\n                        <TableCell align=\"right\">Action</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {data.map((user, id) => (\n                        <TableRow key={user.email + \"_\" + id}>\n                          <TableCell>\n                            {user.userImage && (\n                              <img\n                                width=\"40%\"\n                                className={classes.media}\n                                src={user.userImage}\n                                alt=\"\"\n                              />\n                            )}\n                          </TableCell>\n                          <TableCell>\n                            {user?.firstName + \" \" + user?.lastName}\n                          </TableCell>\n                          <TableCell>{user.email}</TableCell>\n                          <TableCell>{user.Address}</TableCell>\n                          <TableCell>{user.mobileNumber}</TableCell>\n                          <TableCell align=\"right\">\n                            <Button\n                              variant=\"contained\"\n                              onClick={() =>\n                                history.push(`/userDashboard?_id=${user._id}`)\n                              }\n                              color=\"primary\"\n                            >\n                              View\n                            </Button>\n                            <Button\n                              variant=\"contained\"\n                              onClick={() => user._id && deleteUser(user._id)}\n                              color=\"secondary\"\n                            >\n                              Delete\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                  <div className={classes.seeMore}></div>\n                </React.Fragment>\n              </Paper>\n              )\n            </Grid>\n          </Grid>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => ({\n  auth: state.auth,\n  error: state.error,\n  users: state.userList.users,\n});\n\nexport default connect(mapStateToProps, {\n  getUsers,\n  deleteUser,\n  logout,\n  clearErrors,\n})(UserList);\n"]},"metadata":{},"sourceType":"module"}