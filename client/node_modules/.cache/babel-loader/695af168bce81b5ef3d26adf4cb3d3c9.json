{"ast":null,"code":"// import { AxiosResponse } from 'axios';\n// import Api from '../../api/index';\nimport { GET_USERS } from \"./types\";\nimport { tokenConfig } from \"./auth\";\nimport axios from \"../../api/axios\";\nimport { returnErrors } from \"./error\";\nexport const usersListAction = () => async dispatch => {\n  try {// const res:AxiosResponse<any> = await Api.apiGet(\"userList\")\n    // dispatch({ type: GET_USERS, payload: res.data })\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getUsers = () => (dispatch, getState) => {\n  axios({\n    method: \"get\",\n    url: \"/getUserList\",\n    ...tokenConfig(getState)\n  }) // .get('/api/items')\n  .then(res => dispatch({\n    type: GET_USERS,\n    payload: res\n  })).catch(err => {\n    var _err$data;\n\n    return dispatch(returnErrors({\n      msg: (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message\n    }, err.status));\n  });\n};\nexport const setActiveUserAction = payload => async dispatch => {// dispatch({ type: SET_ACTIVE_USER, payload });\n};\nexport const deleteUserAction = args => async dispatch => {\n  try {\n    // const res:AxiosResponse<any> = await Api.apiDelete(\"users\", args)\n    dispatch(usersListAction());\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getUserAdmById = _id => (dispatch, getState) => {\n  axios({\n    method: \"get\",\n    url: \"/getUser\",\n    params: {\n      _id: _id || \"\"\n    },\n    ...tokenConfig(getState)\n  }) // .delete(`/api/items/${id}`, tokenConfig(getState))\n  .then(res => {\n    dispatch({\n      type: EDIT_USER,\n      payload: res === null || res === void 0 ? void 0 : res.user\n    });\n    dispatch(returnErrors({\n      msg: \"User loaded successfully\"\n    }, 200));\n  }).catch(err => {\n    var _err$data2;\n\n    return dispatch(returnErrors({\n      msg: (_err$data2 = err.data) === null || _err$data2 === void 0 ? void 0 : _err$data2.message\n    }, err.status));\n  });\n};","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/user.ts"],"names":["GET_USERS","tokenConfig","axios","returnErrors","usersListAction","dispatch","err","console","log","getUsers","getState","method","url","then","res","type","payload","catch","msg","data","message","status","setActiveUserAction","deleteUserAction","args","getUserAdmById","_id","params","EDIT_USER","user"],"mappings":"AAAA;AAEA;AAEA,SAASA,SAAT,QAA2C,SAA3C;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,YAAT,QAA6B,SAA7B;AAEA,OAAO,MAAMC,eAA2B,GACtC,MAAM,MAAOC,QAAP,IAAuC;AAC3C,MAAI,CACF;AACA;AACD,GAHD,CAGE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CARI;AASP,OAAO,MAAMG,QAAQ,GACnB,MAAM,CAACJ,QAAD,EAA8BK,QAA9B,KAAqD;AACzDR,EAAAA,KAAK,CAAC;AACJS,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,EAAE,cAFD;AAGJ,OAAGX,WAAW,CAACS,QAAD;AAHV,GAAD,CAAL,CAKE;AALF,GAMGG,IANH,CAMSC,GAAD,IACJT,QAAQ,CAAC;AACPU,IAAAA,IAAI,EAAEf,SADC;AAEPgB,IAAAA,OAAO,EAAEF;AAFF,GAAD,CAPZ,EAYGG,KAZH,CAYUX,GAAD;AAAA;;AAAA,WACLD,QAAQ,CAACF,YAAY,CAAC;AAAEe,MAAAA,GAAG,eAAEZ,GAAG,CAACa,IAAN,8CAAE,UAAUC;AAAjB,KAAD,EAA6Bd,GAAG,CAACe,MAAjC,CAAb,CADH;AAAA,GAZT;AAeD,CAjBI;AAmBP,OAAO,MAAMC,mBAAqC,GAC/CN,OAAD,IAAkB,MAAOX,QAAP,IAAyB,CACzC;AACD,CAHI;AAKP,OAAO,MAAMkB,gBAAqC,GAC/CC,IAAD,IAAkB,MAAOnB,QAAP,IAAyB;AACzC,MAAI;AACF;AACAA,IAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACD,GAHD,CAGE,OAAOE,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CARI;AAUP,OAAO,MAAMmB,cAAc,GACxBC,GAAD,IAAiB,CAACrB,QAAD,EAA8BK,QAA9B,KAAqD;AACpER,EAAAA,KAAK,CAAC;AACJS,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,EAAE,UAFD;AAGJe,IAAAA,MAAM,EAAE;AACND,MAAAA,GAAG,EAAEA,GAAG,IAAI;AADN,KAHJ;AAMJ,OAAGzB,WAAW,CAACS,QAAD;AANV,GAAD,CAAL,CAQE;AARF,GASGG,IATH,CASSC,GAAD,IAAc;AAClBT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEa,SADC;AAEPZ,MAAAA,OAAO,EAAEF,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEe;AAFP,KAAD,CAAR;AAKAxB,IAAAA,QAAQ,CAACF,YAAY,CAAC;AAAEe,MAAAA,GAAG,EAAE;AAAP,KAAD,EAAsC,GAAtC,CAAb,CAAR;AACD,GAhBH,EAiBGD,KAjBH,CAiBUX,GAAD;AAAA;;AAAA,WACLD,QAAQ,CAACF,YAAY,CAAC;AAAEe,MAAAA,GAAG,gBAAEZ,GAAG,CAACa,IAAN,+CAAE,WAAUC;AAAjB,KAAD,EAA6Bd,GAAG,CAACe,MAAjC,CAAb,CADH;AAAA,GAjBT;AAoBD,CAtBI","sourcesContent":["// import { AxiosResponse } from 'axios';\nimport { Dispatch } from \"redux\";\n// import Api from '../../api/index';\nimport { IAction } from \"../../utils/interfaces\";\nimport { GET_USERS, SET_ACTIVE_USER } from \"./types\";\nimport { tokenConfig } from \"./auth\";\nimport axios from \"../../api/axios\";\nimport { returnErrors } from \"./error\";\n\nexport const usersListAction: () => void =\n  () => async (dispatch: Dispatch<IAction>) => {\n    try {\n      // const res:AxiosResponse<any> = await Api.apiGet(\"userList\")\n      // dispatch({ type: GET_USERS, payload: res.data })\n    } catch (err) {\n      console.log(err);\n    }\n  };\nexport const getUsers =\n  () => (dispatch: Dispatch<IAction>, getState: Function) => {\n    axios({\n      method: \"get\",\n      url: \"/getUserList\",\n      ...tokenConfig(getState),\n    })\n      // .get('/api/items')\n      .then((res) =>\n        dispatch({\n          type: GET_USERS,\n          payload: res,\n        })\n      )\n      .catch((err) =>\n        dispatch(returnErrors({ msg: err.data?.message }, err.status))\n      );\n  };\n\nexport const setActiveUserAction: (a: any) => void =\n  (payload: any) => async (dispatch: any) => {\n    // dispatch({ type: SET_ACTIVE_USER, payload });\n  };\n\nexport const deleteUserAction: (a: string) => void =\n  (args: string) => async (dispatch: any) => {\n    try {\n      // const res:AxiosResponse<any> = await Api.apiDelete(\"users\", args)\n      dispatch(usersListAction());\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\nexport const getUserAdmById =\n  (_id: string) => (dispatch: Dispatch<IAction>, getState: Function) => {\n    axios({\n      method: \"get\",\n      url: \"/getUser\",\n      params: {\n        _id: _id || \"\",\n      },\n      ...tokenConfig(getState),\n    })\n      // .delete(`/api/items/${id}`, tokenConfig(getState))\n      .then((res: any) => {\n        dispatch({\n          type: EDIT_USER,\n          payload: res?.user,\n        });\n\n        dispatch(returnErrors({ msg: \"User loaded successfully\" }, 200));\n      })\n      .catch((err) =>\n        dispatch(returnErrors({ msg: err.data?.message }, err.status))\n      );\n  };\n"]},"metadata":{},"sourceType":"module"}