{"ast":null,"code":"import Api from '../../api/index';\nimport { LOGOUT } from './types';\nimport Users from \"../../db/users.json\";\nexport const loginAction = payload => async dispatch => {\n  try {// const res:AxiosResponse<any> = await Api.apiGet(\"login\", payload)\n    // setLocalStorage(\"token\", JSON.stringify({id: res.data[0].id, name: res.data[0].firstname}));\n    // dispatch({ type: LOGIN_SUCCESS, payload: res.data[0]})\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const registerAction = (payload, cb) => async () => {\n  try {\n    console.log(payload, Users, \"payloadd\");\n    await Api.apiPost(\"signUp\", payload);\n    cb();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const logoutAction = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: LOGOUT\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/auth.ts"],"names":["Api","LOGOUT","Users","loginAction","payload","dispatch","err","console","log","registerAction","cb","apiPost","logoutAction","localStorage","removeItem","type"],"mappings":"AAEA,OAAOA,GAAP,MAAgB,iBAAhB;AAGA,SAAwBC,MAAxB,QAAsC,SAAtC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAO,MAAMC,WAA+B,GAAIC,OAAD,IAAoB,MAAOC,QAAP,IAAuC;AACtG,MAAI,CACA;AACA;AACA;AACH,GAJD,CAIE,OAAOC,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CARM;AAUP,OAAO,MAAMG,cAAgD,GAAG,CAACL,OAAD,EAAiBM,EAAjB,KAAkC,YAAY;AAC1G,MAAI;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAAoBF,KAApB,EAA0B,UAA1B;AAEC,UAAMF,GAAG,CAACW,OAAJ,CAAY,QAAZ,EAAsBP,OAAtB,CAAN;AACAM,IAAAA,EAAE;AACL,GALD,CAKE,OAAOJ,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CATM;AAWP,OAAO,MAAMM,YAAwB,GAAG,MAAM,MAAOP,QAAP,IAAuC;AACjF,MAAI;AACAQ,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAT,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAEd;AAAR,KAAD,CAAR;AACH,GAHD,CAGE,OAAOK,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAPM","sourcesContent":["import { AxiosResponse } from 'axios';\nimport { Dispatch } from 'redux';\nimport Api from '../../api/index';\nimport { setLocalStorage } from '../../services';\nimport { IAction } from '../../utils/interfaces';\nimport { LOGIN_SUCCESS, LOGOUT } from './types';\nimport Users from \"../../db/users.json\"\n\nexport const loginAction: (a:string) => void = (payload:string) => async (dispatch: Dispatch<IAction>) => {\n    try {\n        // const res:AxiosResponse<any> = await Api.apiGet(\"login\", payload)\n        // setLocalStorage(\"token\", JSON.stringify({id: res.data[0].id, name: res.data[0].firstname}));\n        // dispatch({ type: LOGIN_SUCCESS, payload: res.data[0]})\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const registerAction: (a: object, b: Function) => void = (payload:object, cb: Function) => async () => {\n    try {\n       console.log(payload,Users,\"payloadd\");\n        \n        await Api.apiPost(\"signUp\", payload)\n        cb();\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const logoutAction: () => void = () => async (dispatch: Dispatch<IAction>) => {\n    try {\n        localStorage.removeItem(\"token\");\n        dispatch({ type: LOGOUT })\n    } catch (err) {\n        console.log(err);\n    }\n}"]},"metadata":{},"sourceType":"module"}