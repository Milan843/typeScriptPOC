{"ast":null,"code":"var _jsxFileName = \"/home/milan/Milan/Projects/typescript-poc/client/src/components/UserDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createStyles, makeStyles } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { useFormik } from \"formik\";\nimport { userSchema } from \"../utils/yup\";\nimport { editUserAction } from \"../redux/actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 400,\n    margin: `${theme.spacing(0)} auto`\n  },\n  registerBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: \"center\",\n    background: \"#212121\",\n    color: \"#fff\"\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n}));\n\nconst UserDashboard = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [userImage, setUserImage] = useState(\"\");\n  const [isEdit, setIsEdit] = useState(false);\n  const selectedUser = useSelector(({\n    users\n  }) => users.activeUser);\n  useEffect(() => {\n    if (props.location.pathname.includes(\"update\")) {\n      setIsEdit(true);\n    }\n\n    if (!selectedUser) {\n      const id = props.match.params.userId; //   dispatch(getUserById(`/${id}`));\n    }\n\n    if (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.userImage) {\n      setUserImage(selectedUser.userImage);\n    }\n  }, [selectedUser]);\n  console.log(selectedUser, \"selectedUser\");\n\n  const handleImage = e => {\n    if (!e.target.files) {\n      return;\n    }\n\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = function (dataa) {\n      let dataURL = dataa.target.result;\n      dataURL = dataURL.replace(\";base64\", `;name=${file.name};base64`);\n      setUserImage(dataURL);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const initialValues = {\n    _id: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser._id) || \"\",\n    firstName: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.firstName) || \"\",\n    email: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.email) || \"\",\n    mobileNumber: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.mobileNumber) || \"\",\n    address: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.address) || \"\",\n    description: (selectedUser === null || selectedUser === void 0 ? void 0 : selectedUser.description) || \"\"\n  };\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: userSchema,\n    onSubmit: values => {\n      let payload = { ...values,\n        userImage: userImage\n      };\n      dispatch(editUserAction(payload));\n    }\n  });\n  console.log(formik);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.container,\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          className: classes.header,\n          title: \"USER DETAILS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"firstName\",\n              type: \"text\",\n              label: \"firstName\",\n              placeholder: \"firstName\",\n              margin: \"normal\",\n              value: formik.values.firstName,\n              onChange: formik.handleChange,\n              helperText: formik.errors.firstName,\n              disabled: !isEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"email\",\n              type: \"email\",\n              label: \"email\",\n              placeholder: \"email\",\n              margin: \"normal\",\n              value: formik.values.email,\n              onChange: formik.handleChange,\n              helperText: formik.errors.email,\n              disabled: !isEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"mobileNumber\",\n              type: \"text\",\n              label: \"Mobile Number\",\n              placeholder: \"Mobile Number\",\n              margin: \"normal\",\n              value: formik.values.mobileNumber,\n              onChange: formik.handleChange,\n              helperText: formik.errors.mobileNumber,\n              disabled: !isEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"address\",\n              type: \"text\",\n              label: \"Address\",\n              placeholder: \"Address\",\n              margin: \"normal\",\n              value: formik.values.address,\n              onChange: formik.handleChange,\n              helperText: formik.errors.address,\n              disabled: !isEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              id: \"description\",\n              type: \"text\",\n              label: \"Description\",\n              placeholder: \"Description\",\n              margin: \"normal\",\n              value: formik.values.description,\n              onChange: formik.handleChange,\n              helperText: formik.errors.description,\n              disabled: !isEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), isEdit && /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"userImage\",\n            name: \"userImage\",\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), userImage && /*#__PURE__*/_jsxDEV(\"img\", {\n            width: \"100%\",\n            src: userImage,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), isEdit ? /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            size: \"large\",\n            color: \"secondary\",\n            className: classes.registerBtn,\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this) //   <CardActions>\n        //     <Button\n        //       variant=\"contained\"\n        //       size=\"large\"\n        //       color=\"secondary\"\n        //       className={classes.registerBtn}\n        //       onClick={() => props.history.push(`/update/${formik.values._id}`)}\n        //     >\n        //       Want to update\n        //     </Button>\n        //   </CardActions>\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true); //   }}\n  // </Formik>\n  //   );\n};\n\n_s(UserDashboard, \"/pYW6c5sM4XdkIWXN+HiBQBaCg4=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useFormik];\n});\n\n_c = UserDashboard;\nexport default UserDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/components/UserDashboard.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","createStyles","makeStyles","TextField","Card","CardContent","CardActions","CardHeader","Button","useFormik","userSchema","editUserAction","useStyles","theme","container","display","flexWrap","width","margin","spacing","registerBtn","marginTop","flexGrow","header","textAlign","background","color","card","UserDashboard","props","classes","dispatch","userImage","setUserImage","isEdit","setIsEdit","selectedUser","users","activeUser","location","pathname","includes","id","match","params","userId","console","log","handleImage","e","target","files","file","reader","FileReader","onload","dataa","dataURL","result","replace","name","readAsDataURL","initialValues","_id","firstName","email","mobileNumber","address","description","formik","validationSchema","onSubmit","values","payload","handleSubmit","handleChange","errors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Dispatch } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { useFormik } from \"formik\";\nimport { userSchema } from \"../utils/yup\";\nimport { editUserAction } from \"../redux/actions/auth\";\nimport { getUsers } from \"../redux/actions/user\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: 400,\n      margin: `${theme.spacing(0)} auto`,\n    },\n    registerBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1,\n    },\n    header: {\n      textAlign: \"center\",\n      background: \"#212121\",\n      color: \"#fff\",\n    },\n    card: {\n      marginTop: theme.spacing(10),\n    },\n  })\n);\n\ninterface Values {\n  firstName: string;\n  email: string;\n  mobileNumber: string;\n  address: string;\n  description: string;\n  userImage: string;\n}\n\nconst UserDashboard: React.FC = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch<Dispatch<any>>();\n  const [userImage, setUserImage] = useState(\"\");\n  const [isEdit, setIsEdit] = useState<any>(false);\n  const selectedUser = useSelector(({ users }: any) => users.activeUser);\n\n  useEffect(() => {\n    if (props.location.pathname.includes(\"update\")) {\n      setIsEdit(true);\n    }\n    if (!selectedUser) {\n      const id = props.match.params.userId;\n      //   dispatch(getUserById(`/${id}`));\n    }\n    if (selectedUser?.userImage) {\n      setUserImage(selectedUser.userImage);\n    }\n  }, [selectedUser]);\n\n  console.log(selectedUser, \"selectedUser\");\n  const handleImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) {\n      return;\n    }\n    const file = e.target.files[0];\n\n    const reader = new FileReader();\n\n    reader.onload = function (dataa: any) {\n      let dataURL = dataa.target.result;\n      dataURL = dataURL.replace(\";base64\", `;name=${file.name};base64`);\n      setUserImage(dataURL);\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const initialValues = {\n    _id: selectedUser?._id || \"\",\n    firstName: selectedUser?.firstName || \"\",\n    email: selectedUser?.email || \"\",\n    mobileNumber: selectedUser?.mobileNumber || \"\",\n    address: selectedUser?.address || \"\",\n    description: selectedUser?.description || \"\",\n  };\n  const formik: any = useFormik<any>({\n    initialValues: initialValues,\n    validationSchema: userSchema,\n    onSubmit: (values: Values) => {\n      let payload = { ...values, userImage: userImage };\n      dispatch(editUserAction(payload));\n    },\n  });\n  console.log(formik);\n  return (\n    <>\n      <div>\n        <Button variant=\"contained\" color=\"primary\">\n          Primary\n        </Button>\n      </div>\n      <form className={classes.container} onSubmit={formik.handleSubmit}>\n        <Card className={classes.card}>\n          <CardHeader className={classes.header} title=\"USER DETAILS\" />\n          <CardContent>\n            <div>\n              <TextField\n                fullWidth\n                id=\"firstName\"\n                type=\"text\"\n                label=\"firstName\"\n                placeholder=\"firstName\"\n                margin=\"normal\"\n                value={formik.values.firstName}\n                onChange={formik.handleChange}\n                helperText={formik.errors.firstName}\n                disabled={!isEdit}\n              />\n              <TextField\n                fullWidth\n                id=\"email\"\n                type=\"email\"\n                label=\"email\"\n                placeholder=\"email\"\n                margin=\"normal\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                helperText={formik.errors.email}\n                disabled={!isEdit}\n              />\n              <TextField\n                fullWidth\n                id=\"mobileNumber\"\n                type=\"text\"\n                label=\"Mobile Number\"\n                placeholder=\"Mobile Number\"\n                margin=\"normal\"\n                value={formik.values.mobileNumber}\n                onChange={formik.handleChange}\n                helperText={formik.errors.mobileNumber}\n                disabled={!isEdit}\n              />\n              <TextField\n                fullWidth\n                id=\"address\"\n                type=\"text\"\n                label=\"Address\"\n                placeholder=\"Address\"\n                margin=\"normal\"\n                value={formik.values.address}\n                onChange={formik.handleChange}\n                helperText={formik.errors.address}\n                disabled={!isEdit}\n              />\n\n              <TextField\n                fullWidth\n                id=\"description\"\n                type=\"text\"\n                label=\"Description\"\n                placeholder=\"Description\"\n                margin=\"normal\"\n                value={formik.values.description}\n                onChange={formik.handleChange}\n                helperText={formik.errors.description}\n                disabled={!isEdit}\n              />\n            </div>\n            {isEdit && (\n              <input\n                id=\"userImage\"\n                name=\"userImage\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleImage}\n              />\n            )}\n            {userImage && <img width=\"100%\" src={userImage} alt=\"\" />}\n          </CardContent>\n\n          {isEdit ? (\n            <CardActions>\n              <Button\n                variant=\"contained\"\n                size=\"large\"\n                color=\"secondary\"\n                className={classes.registerBtn}\n                type=\"submit\"\n              >\n                Update\n              </Button>\n            </CardActions>\n          ) : (\n            <div></div>\n            //   <CardActions>\n            //     <Button\n            //       variant=\"contained\"\n            //       size=\"large\"\n            //       color=\"secondary\"\n            //       className={classes.registerBtn}\n            //       onClick={() => props.history.push(`/update/${formik.values._id}`)}\n            //     >\n            //       Want to update\n            //     </Button>\n            //   </CardActions>\n          )}\n        </Card>\n      </form>\n    </>\n  );\n  //   }}\n  // </Formik>\n  //   );\n};\n\nexport default UserDashboard;\n"]},"metadata":{},"sourceType":"module"}