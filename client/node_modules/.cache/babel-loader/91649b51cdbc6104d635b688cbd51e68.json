{"ast":null,"code":"var _jsxFileName = \"/home/milan/Milan/Projects/typescript-poc/client/src/components/LogIn.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { createStyles, makeStyles, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginSchema } from \"../utils/yup\";\nimport { loginAction } from \"../redux/actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 400,\n    margin: `${theme.spacing(0)} auto`\n  },\n  loginBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: \"center\",\n    background: \"#212121\",\n    color: \"#fff\"\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n})); //state type\n\nconst Login = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(({\n    auth\n  }) => auth.isAuthenticated);\n  console.log(isAuthenticated, \"Authentication\");\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  useEffect(() => {\n    if (isAuthenticated || checkAuth()) {\n      props.history.push(\"/dashboard\");\n    }\n  }, [isAuthenticated]);\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: loginSchema,\n    onSubmit: values => {\n      // handleSubmit(values);\n      console.log(values, \"val\");\n      dispatch(loginAction(values));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.container,\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: classes.header,\n        title: \"Login App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"email\",\n            type: \"email\",\n            label: \"email\",\n            placeholder: \"email\",\n            value: formik.values.email,\n            onChange: formik.handleChange,\n            helperText: formik.errors.email,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            placeholder: \"Password\",\n            margin: \"normal\",\n            value: formik.values.password,\n            onChange: formik.handleChange,\n            helperText: formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          color: \"secondary\",\n          className: classes.loginBtn,\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \"Already Register!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"OVhxJlwaqpDE/AnCJb9fMOPcibk=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/components/LogIn.tsx"],"names":["React","useEffect","createStyles","makeStyles","Typography","Link","TextField","Card","CardContent","CardActions","CardHeader","Button","useFormik","useDispatch","useSelector","loginSchema","loginAction","useStyles","theme","container","display","flexWrap","width","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","color","card","Login","classes","dispatch","isAuthenticated","auth","console","log","initialValues","email","password","checkAuth","props","history","push","formik","validationSchema","onSubmit","values","handleSubmit","handleChange","errors"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport { createStyles, makeStyles, Theme, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginSchema } from \"../utils/yup\";\nimport { loginAction } from \"../redux/actions/auth\";\nimport { IRootState } from \"../redux/reducers/index\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: 400,\n      margin: `${theme.spacing(0)} auto`,\n    },\n    loginBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1,\n    },\n    header: {\n      textAlign: \"center\",\n      background: \"#212121\",\n      color: \"#fff\",\n    },\n    card: {\n      marginTop: theme.spacing(10),\n    },\n  })\n);\n\n//state type\n\ntype State = {\n  email: string;\n  password: string;\n};\n\nconst Login = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(({ auth }: any) => auth.isAuthenticated);\n  console.log(isAuthenticated, \"Authentication\");\n  const initialValues: State = {\n    email: \"\",\n    password: \"\",\n  };\n\n  useEffect(() => {\n    if (isAuthenticated || checkAuth()) {\n      props.history.push(\"/dashboard\");\n    }\n  }, [isAuthenticated]);\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: loginSchema,\n    onSubmit: (values) => {\n      // handleSubmit(values);\n      console.log(values, \"val\");\n      dispatch(loginAction(values));\n    },\n  });\n\n  return (\n    <form className={classes.container} onSubmit={formik.handleSubmit}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.header} title=\"Login App\" />\n        <CardContent>\n          <div>\n            <TextField\n              fullWidth\n              id=\"email\"\n              type=\"email\"\n              label=\"email\"\n              placeholder=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              helperText={formik.errors.email}\n              margin=\"normal\"\n            />\n            <TextField\n              fullWidth\n              id=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              placeholder=\"Password\"\n              margin=\"normal\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              helperText={formik.errors.password}\n            />\n          </div>\n        </CardContent>\n\n        <CardActions>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            color=\"secondary\"\n            className={classes.loginBtn}\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </CardActions>\n\n        <Link to=\"/register\">\n          <Typography variant=\"caption\">Already Register!!</Typography>\n        </Link>\n      </Card>\n    </form>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}