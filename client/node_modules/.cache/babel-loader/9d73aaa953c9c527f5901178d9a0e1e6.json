{"ast":null,"code":"var _jsxFileName = \"/home/milan/Milan/Projects/typescript-poc/client/src/components/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { useFormik } from \"formik\";\nimport { registerSchema } from \"../utils/yup\";\nimport { registerAction } from \"../redux/actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 400,\n    margin: `${theme.spacing(0)} auto`\n  },\n  registerBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: \"center\",\n    background: \"#212121\",\n    color: \"#fff\"\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n})); //state type\n// type State = {\n//   username: string;\n//   password: string;\n//   isButtonDisabled: boolean;\n//   helperText: string;\n//   isError: boolean;\n// };\n\n// const initialState: State = {\n//   username: \"\",\n//   password: \"\",\n//   isButtonDisabled: true,\n//   helperText: \"\",\n//   isError: false,\n// };\n// type Action =\n//   | { type: \"setUsername\"; payload: string }\n//   | { type: \"setPassword\"; payload: string }\n//   | { type: \"setIsButtonDisabled\"; payload: boolean }\n//   | { type: \"loginSuccess\"; payload: string }\n//   | { type: \"loginFailed\"; payload: string }\n//   | { type: \"setIsError\"; payload: boolean };\n// const reducer = (state: State, action: Action): State => {\n//   switch (action.type) {\n//     case \"setUsername\":\n//       return {\n//         ...state,\n//         username: action.payload,\n//       };\n//     case \"setPassword\":\n//       return {\n//         ...state,\n//         password: action.payload,\n//       };\n//     case \"setIsButtonDisabled\":\n//       return {\n//         ...state,\n//         isButtonDisabled: action.payload,\n//       };\n//     case \"loginSuccess\":\n//       return {\n//         ...state,\n//         helperText: action.payload,\n//         isError: false,\n//       };\n//     case \"loginFailed\":\n//       return {\n//         ...state,\n//         helperText: action.payload,\n//         isError: true,\n//       };\n//     case \"setIsError\":\n//       return {\n//         ...state,\n//         isError: action.payload,\n//       };\n//   }\n// };\nconst Register = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [userImage, setUserImage] = useState(\"\"); //   const [state, dispatch] = useReducer(reducer, initialState);\n  //   const handleLogin = () => {\n  //     if (state.username === \"abc@email.com\" && state.password === \"password\") {\n  //       dispatch({\n  //         type: \"loginSuccess\",\n  //         payload: \"Login Successfully\",\n  //       });\n  //     } else {\n  //       dispatch({\n  //         type: \"loginFailed\",\n  //         payload: \"Incorrect username or password\",\n  //       });\n  //     }\n  //   };\n\n  const handleUploadClick = e => {\n    if (!e.target.files) {\n      return;\n    }\n\n    const file = e.target.files[0]; // const isValidFile = isUserImage(file);\n    // if (!isValidFile) {\n    //   setFormError({\n    //     ...formError,\n    //     userImage: { isValid: false, errorMsg: \"Enter valid image\" },\n    //     isFormValid: false,\n    //   });\n    //   return;\n    // }\n    // setFormError({\n    //   ...formError,\n    //   userImage: { isValid: true, errorMsg: \"Enter valid image\" },\n    //   isFormValid: true,\n    // });\n\n    const reader = new FileReader();\n\n    reader.onload = function (dataa) {\n      let dataURL = dataa.target.result;\n      dataURL = dataURL.replace(\";base64\", `;name=${file.name};base64`);\n      setUserImage(dataURL); // setData({\n      // \t...data,\n      // \tuserImage: dataURL,\n      // });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const initialValues = {\n    firstName: \"\",\n    email: \"\",\n    mobileNumber: \"\",\n    address: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    description: \"\",\n    image: \"\"\n  };\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: registerSchema,\n    onSubmit: values => {\n      //   handleSubmit(values);\n      dispatch(registerAction(values, () => {\n        props.history.push(\"/\");\n      }));\n      console.log(values, \"submit\");\n    }\n  }); //   return (\n  //     <Formik\n  //       key=\"registerForm\"\n  //       initialValues={initialValues}\n  //       //   validationSchema={registerSchema}\n  //       validator={() => ({})}\n  //       onSubmit={(values: Values, { setSubmitting }: FormikHelpers<Values>) => {\n  //         setTimeout(() => {\n  //           alert(JSON.stringify(values, null, 2));\n  //           setSubmitting(false);\n  //         }, 500);\n  //       }}\n  //     >\n  //       {(props) => {\n  // console.log(props);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.container,\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: classes.header,\n        title: \"REGISTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"firstName\",\n            type: \"text\",\n            label: \"firstName\",\n            placeholder: \"firstName\",\n            margin: \"normal\",\n            value: formik.values.firstName,\n            onChange: formik.handleChange,\n            helperText: formik.errors.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"email\",\n            type: \"email\",\n            label: \"email\",\n            placeholder: \"email\",\n            margin: \"normal\",\n            value: formik.values.email,\n            onChange: formik.handleChange,\n            helperText: formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"mobileNumber\",\n            type: \"text\",\n            label: \"Mobile Number\",\n            placeholder: \"Mobile Number\",\n            margin: \"normal\",\n            value: formik.values.mobileNumber,\n            onChange: formik.handleChange,\n            helperText: formik.errors.mobileNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"address\",\n            type: \"text\",\n            label: \"Address\",\n            placeholder: \"Address\",\n            margin: \"normal\",\n            value: formik.values.address,\n            onChange: formik.handleChange,\n            helperText: formik.errors.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            placeholder: \"Password\",\n            margin: \"normal\",\n            value: formik.values.password,\n            onChange: formik.handleChange,\n            helperText: formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"confirmPassword\",\n            type: \"password\",\n            label: \"Confirm password\",\n            placeholder: \"Confirm password\",\n            margin: \"normal\",\n            value: formik.values.confirmPassword,\n            onChange: formik.handleChange,\n            helperText: formik.errors.confirmPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"description\",\n            type: \"text\",\n            label: \"Description\",\n            placeholder: \"Description\",\n            margin: \"normal\",\n            value: formik.values.description,\n            onChange: formik.handleChange,\n            helperText: formik.errors.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          name: \"image\",\n          type: \"file\",\n          onChange: event => {\n            formik.setFieldValue(\"image\", event.currentTarget.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          color: \"secondary\",\n          className: classes.registerBtn,\n          type: \"submit\",\n          children: \"REGISTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        children: \"LOGIN PAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this); //   }}\n  // </Formik>\n  //   );\n};\n\n_s(Register, \"jwjI/IUOvlpHKi5Z8iD0FewzTiA=\", false, function () {\n  return [useStyles, useDispatch, useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/components/Register.tsx"],"names":["React","useState","useDispatch","createStyles","makeStyles","TextField","Card","CardContent","CardActions","CardHeader","Button","useFormik","registerSchema","registerAction","useStyles","theme","container","display","flexWrap","width","margin","spacing","registerBtn","marginTop","flexGrow","header","textAlign","background","color","card","Register","props","classes","dispatch","userImage","setUserImage","handleUploadClick","e","target","files","file","reader","FileReader","onload","dataa","dataURL","result","replace","name","readAsDataURL","initialValues","firstName","email","mobileNumber","address","password","confirmPassword","description","image","formik","validationSchema","onSubmit","values","history","push","console","log","handleSubmit","handleChange","errors","event","setFieldValue","currentTarget"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Dispatch } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { Formik, FormikHelpers, useFormik } from \"formik\";\nimport { registerSchema } from \"../utils/yup\";\nimport { registerAction } from \"../redux/actions/auth\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: 400,\n      margin: `${theme.spacing(0)} auto`,\n    },\n    registerBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1,\n    },\n    header: {\n      textAlign: \"center\",\n      background: \"#212121\",\n      color: \"#fff\",\n    },\n    card: {\n      marginTop: theme.spacing(10),\n    },\n  })\n);\n\n//state type\n\n// type State = {\n//   username: string;\n//   password: string;\n//   isButtonDisabled: boolean;\n//   helperText: string;\n//   isError: boolean;\n// };\ninterface Values {\n  firstName: string;\n  email: string;\n  mobileNumber: string;\n  address: string;\n  password: string;\n  confirmPassword: string;\n  description: string;\n  image: any;\n}\n// const initialState: State = {\n//   username: \"\",\n//   password: \"\",\n//   isButtonDisabled: true,\n//   helperText: \"\",\n//   isError: false,\n// };\n\n// type Action =\n//   | { type: \"setUsername\"; payload: string }\n//   | { type: \"setPassword\"; payload: string }\n//   | { type: \"setIsButtonDisabled\"; payload: boolean }\n//   | { type: \"loginSuccess\"; payload: string }\n//   | { type: \"loginFailed\"; payload: string }\n//   | { type: \"setIsError\"; payload: boolean };\n\n// const reducer = (state: State, action: Action): State => {\n//   switch (action.type) {\n//     case \"setUsername\":\n//       return {\n//         ...state,\n//         username: action.payload,\n//       };\n//     case \"setPassword\":\n//       return {\n//         ...state,\n//         password: action.payload,\n//       };\n//     case \"setIsButtonDisabled\":\n//       return {\n//         ...state,\n//         isButtonDisabled: action.payload,\n//       };\n//     case \"loginSuccess\":\n//       return {\n//         ...state,\n//         helperText: action.payload,\n//         isError: false,\n//       };\n//     case \"loginFailed\":\n//       return {\n//         ...state,\n//         helperText: action.payload,\n//         isError: true,\n//       };\n//     case \"setIsError\":\n//       return {\n//         ...state,\n//         isError: action.payload,\n//       };\n//   }\n// };\n\nconst Register: React.FC = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch<Dispatch<any>>();\n  const [userImage, setUserImage] = useState(\"\");\n\n  //   const [state, dispatch] = useReducer(reducer, initialState);\n\n  //   const handleLogin = () => {\n  //     if (state.username === \"abc@email.com\" && state.password === \"password\") {\n  //       dispatch({\n  //         type: \"loginSuccess\",\n  //         payload: \"Login Successfully\",\n  //       });\n  //     } else {\n  //       dispatch({\n  //         type: \"loginFailed\",\n  //         payload: \"Incorrect username or password\",\n  //       });\n  //     }\n  //   };\n\n  const handleUploadClick = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) {\n      return;\n    }\n    const file = e.target.files[0];\n    // const isValidFile = isUserImage(file);\n    // if (!isValidFile) {\n    //   setFormError({\n    //     ...formError,\n    //     userImage: { isValid: false, errorMsg: \"Enter valid image\" },\n    //     isFormValid: false,\n    //   });\n\n    //   return;\n    // }\n    // setFormError({\n    //   ...formError,\n    //   userImage: { isValid: true, errorMsg: \"Enter valid image\" },\n    //   isFormValid: true,\n    // });\n\n    const reader = new FileReader();\n\n    reader.onload = function (dataa: any) {\n      let dataURL = dataa.target.result;\n      dataURL = dataURL.replace(\";base64\", `;name=${file.name};base64`);\n      setUserImage(dataURL);\n\n      // setData({\n      // \t...data,\n      // \tuserImage: dataURL,\n      // });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const initialValues = {\n    firstName: \"\",\n    email: \"\",\n    mobileNumber: \"\",\n    address: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    description: \"\",\n    image: \"\",\n  };\n  const formik: any = useFormik<any>({\n    initialValues: initialValues,\n    validationSchema: registerSchema,\n    onSubmit: (values) => {\n      //   handleSubmit(values);\n      dispatch(\n        registerAction(values, () => {\n          props.history.push(\"/\");\n        })\n      );\n      console.log(values, \"submit\");\n    },\n  });\n  //   return (\n  //     <Formik\n  //       key=\"registerForm\"\n  //       initialValues={initialValues}\n  //       //   validationSchema={registerSchema}\n  //       validator={() => ({})}\n  //       onSubmit={(values: Values, { setSubmitting }: FormikHelpers<Values>) => {\n  //         setTimeout(() => {\n  //           alert(JSON.stringify(values, null, 2));\n  //           setSubmitting(false);\n  //         }, 500);\n  //       }}\n  //     >\n  //       {(props) => {\n  // console.log(props);\n  return (\n    <form className={classes.container} onSubmit={formik.handleSubmit}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.header} title=\"REGISTER\" />\n        <CardContent>\n          <div>\n            <TextField\n              fullWidth\n              id=\"firstName\"\n              type=\"text\"\n              label=\"firstName\"\n              placeholder=\"firstName\"\n              margin=\"normal\"\n              value={formik.values.firstName}\n              onChange={formik.handleChange}\n              helperText={formik.errors.firstName}\n            />\n            <TextField\n              fullWidth\n              id=\"email\"\n              type=\"email\"\n              label=\"email\"\n              placeholder=\"email\"\n              margin=\"normal\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              helperText={formik.errors.email}\n            />\n            <TextField\n              fullWidth\n              id=\"mobileNumber\"\n              type=\"text\"\n              label=\"Mobile Number\"\n              placeholder=\"Mobile Number\"\n              margin=\"normal\"\n              value={formik.values.mobileNumber}\n              onChange={formik.handleChange}\n              helperText={formik.errors.mobileNumber}\n            />\n            <TextField\n              fullWidth\n              id=\"address\"\n              type=\"text\"\n              label=\"Address\"\n              placeholder=\"Address\"\n              margin=\"normal\"\n              value={formik.values.address}\n              onChange={formik.handleChange}\n              helperText={formik.errors.address}\n            />\n            <TextField\n              fullWidth\n              id=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              placeholder=\"Password\"\n              margin=\"normal\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              helperText={formik.errors.password}\n            />\n            <TextField\n              fullWidth\n              id=\"confirmPassword\"\n              type=\"password\"\n              label=\"Confirm password\"\n              placeholder=\"Confirm password\"\n              margin=\"normal\"\n              value={formik.values.confirmPassword}\n              onChange={formik.handleChange}\n              helperText={formik.errors.confirmPassword}\n            />\n            <TextField\n              fullWidth\n              id=\"description\"\n              type=\"text\"\n              label=\"Description\"\n              placeholder=\"Description\"\n              margin=\"normal\"\n              value={formik.values.description}\n              onChange={formik.handleChange}\n              helperText={formik.errors.description}\n            />\n          </div>\n          <input\n            id=\"image\"\n            name=\"image\"\n            type=\"file\"\n            onChange={(event: any) => {\n              formik.setFieldValue(\"image\", event.currentTarget.files[0]);\n            }}\n          />\n        </CardContent>\n\n        <CardActions>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            color=\"secondary\"\n            className={classes.registerBtn}\n            type=\"submit\"\n          >\n            REGISTER\n          </Button>\n        </CardActions>\n        <Button size=\"small\" color=\"primary\">\n          LOGIN PAGE\n        </Button>\n      </Card>\n    </form>\n  );\n  //   }}\n  // </Formik>\n  //   );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}