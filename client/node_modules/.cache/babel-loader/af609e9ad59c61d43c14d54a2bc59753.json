{"ast":null,"code":"var _jsxFileName = \"/home/milan/Milan/Projects/typescript-poc/client/src/components/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers } from \"../redux/actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  dashboard_container: {\n    padding: theme.spacing(5)\n  }\n}));\n\nconst Dashboard = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch(); //   const [activeId, setActiveId] = useState(-1);\n  //   const [showAlert, setShowAlert] = useState(false);\n  //   const loggedInUser = JSON.parse(getFromLocalStorage(\"token\") || \"\");\n\n  let allUsers = [];\n  allUsers = useSelector(({\n    users\n  }) => users);\n  console.log(users);\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []); //   useEffect(() => {\n  //     dispatch(usersListAction());\n  //     // eslint-disable-next-line\n  //   }, []);\n  //   const handleDelete = (id: number) => {\n  //     setActiveId(id);\n  //     toggleAlert();\n  //   };\n  //   const handleView = (id: number, path: string) => {\n  //     let user = users.find((item: any) => item.id === id);\n  //     // dispatch(setActiveUserAction(user));\n  //     props.history.push(`/${path}/${id}`);\n  //   };\n  //   const toggleAlert = () => {\n  //     setShowAlert((prev: Boolean) => !prev);\n  //   };\n  //   const onConfirm = () => {\n  //     dispatch(deleteUserAction(`/${activeId}`));\n  //     toggleAlert();\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.dashboard_container,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          children: /*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"VJ3Svm9sl2MA8iyCjWIUdtHl3nE=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/components/Dashboard.tsx"],"names":["React","makeStyles","Table","TableCell","TableContainer","TableHead","TableRow","Paper","Box","useEffect","useDispatch","useSelector","getUsers","useStyles","theme","table","minWidth","dashboard_container","padding","spacing","Dashboard","props","classes","dispatch","allUsers","users","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,GAAT,QAAuC,mBAAvC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAUA,SAASC,QAAT,QAAyB,uBAAzB;;;AAGA,MAAMC,SAAS,GAAGZ,UAAU,CAAEa,KAAD,KAAmB;AAC9CC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GADuC;AAI9CC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADU;AAJyB,CAAnB,CAAD,CAA5B;;AASA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AAAA;;AAChC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,QAAQ,GAAGb,WAAW,EAA5B,CAFgC,CAGhC;AACA;AAEA;;AACA,MAAIc,QAAQ,GAAG,EAAf;AACAA,EAAAA,QAAQ,GAAGb,WAAW,CAAC,CAAC;AAAEc,IAAAA;AAAF,GAAD,KAAoBA,KAArB,CAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACX,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAVgC,CAahC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEU,OAAO,CAACL,mBAAxB;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAEV,KAA3B;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEe,OAAO,CAACP,KAA1B;AAAiC,wBAAW,cAA5C;AAAA,iCACE,QAAC,SAAD;AAAA,mCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAiED,CAvGD;;GAAMK,S;UACYP,S,EACCH,W,EAMNC,W;;;KARPS,S;AAyGN,eAAeA,SAAf","sourcesContent":["import React, { Dispatch, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Theme, IconButton } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteUserAction,\n  usersListAction,\n  //   setActiveUserAction,\n} from \"../redux/actions/user\";\nimport { Delete, Edit, Visibility } from \"@material-ui/icons\";\n// import Alert from \"../components/common/Alert\";\nimport { getFromLocalStorage } from \"../services\";\nimport { USERS_LOADING } from \"../redux/actions/types\";\nimport { getUsers } from \"../redux/actions/user\";\nimport { IUserListDashBoard } from \"../utils/interfaces\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  dashboard_container: {\n    padding: theme.spacing(5),\n  },\n}));\n\nconst Dashboard = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch<Dispatch<any>>();\n  //   const [activeId, setActiveId] = useState(-1);\n  //   const [showAlert, setShowAlert] = useState(false);\n\n  //   const loggedInUser = JSON.parse(getFromLocalStorage(\"token\") || \"\");\n  let allUsers = [];\n  allUsers = useSelector(({ users }: any) => users);\n  console.log(users);\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n  //   useEffect(() => {\n  //     dispatch(usersListAction());\n  //     // eslint-disable-next-line\n  //   }, []);\n\n  //   const handleDelete = (id: number) => {\n  //     setActiveId(id);\n  //     toggleAlert();\n  //   };\n\n  //   const handleView = (id: number, path: string) => {\n  //     let user = users.find((item: any) => item.id === id);\n  //     // dispatch(setActiveUserAction(user));\n  //     props.history.push(`/${path}/${id}`);\n  //   };\n\n  //   const toggleAlert = () => {\n  //     setShowAlert((prev: Boolean) => !prev);\n  //   };\n\n  //   const onConfirm = () => {\n  //     dispatch(deleteUserAction(`/${activeId}`));\n  //     toggleAlert();\n  //   };\n\n  return (\n    <>\n      <div>hello</div>\n      {/* <Alert\n        open={showAlert}\n        message={\"Are you sure you want to delete this user ?\"}\n        onConfirm={onConfirm}\n        onCancel={toggleAlert}\n        showActions={true}\n      /> */}\n      <Box className={classes.dashboard_container}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>First Name</TableCell>\n                <TableCell align=\"left\">Email</TableCell>\n                <TableCell align=\"left\">Address</TableCell>\n                <TableCell align=\"left\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            {/* <TableBody>\n              {users?.map((row: any) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.firstname}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.email}</TableCell>\n                  <TableCell align=\"left\">{row.address}</TableCell>\n                  <TableCell align=\"left\">\n                    {loggedInUser.role === \"admin\" && (\n                      <IconButton\n                        color=\"primary\"\n                        size=\"small\"\n                        aria-label=\"upload picture\"\n                        // onClick={() => handleView(row.id, \"edit\")}\n                      >\n                        <Edit />\n                      </IconButton>\n                    )}\n                    <IconButton\n                      color=\"primary\"\n                      size=\"small\"\n                      aria-label=\"upload picture\"\n                      //   onClick={() => handleView(row.id, \"view\")}\n                    >\n                      <Visibility />\n                    </IconButton>\n                    <IconButton\n                      color=\"secondary\"\n                      size=\"small\"\n                      aria-label=\"upload picture\"\n                      //   onClick={() => handleDelete(row.id)}\n                    >\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody> */}\n          </Table>\n        </TableContainer>\n      </Box>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}