{"ast":null,"code":"var _jsxFileName = \"/home/milan/Milan/Projects/typescript-poc/client/src/components/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUserAction //   setActiveUserAction,\n} from \"../redux/actions/user\";\n// import Alert from \"../components/common/Alert\";\nimport { getFromLocalStorage } from \"../services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  dashboard_container: {\n    padding: theme.spacing(5)\n  }\n}));\n\nconst Dashboard = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [activeId, setActiveId] = useState(-1);\n  const [showAlert, setShowAlert] = useState(false);\n  const loggedInUser = JSON.parse(getFromLocalStorage(\"token\") || \"\");\n  const users = useSelector(({\n    users\n  }) => users);\n  console.log(users); //   useEffect(() => {\n  //     dispatch(usersListAction());\n  //     // eslint-disable-next-line\n  //   }, []);\n\n  const handleDelete = id => {\n    setActiveId(id);\n    toggleAlert();\n  };\n\n  const handleView = (id, path) => {\n    let user = users.find(item => item.id === id); // dispatch(setActiveUserAction(user));\n\n    props.history.push(`/${path}/${id}`);\n  };\n\n  const toggleAlert = () => {\n    setShowAlert(prev => !prev);\n  };\n\n  const onConfirm = () => {\n    dispatch(deleteUserAction(`/${activeId}`));\n    toggleAlert();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"uZb/gm7nwh7UDtdvqyFUVcq2cK0=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/components/Dashboard.tsx"],"names":["React","useState","makeStyles","useDispatch","useSelector","deleteUserAction","getFromLocalStorage","useStyles","theme","table","minWidth","dashboard_container","padding","spacing","Dashboard","props","classes","dispatch","activeId","setActiveId","showAlert","setShowAlert","loggedInUser","JSON","parse","users","console","log","handleDelete","id","toggleAlert","handleView","path","user","find","item","history","push","prev","onConfirm"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAUA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,gBADF,CAGE;AAHF,OAIO,uBAJP;AAMA;AACA,SAASC,mBAAT,QAAoC,aAApC;;;AAGA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAmB;AAC9CC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GADuC;AAI9CC,EAAAA,mBAAmB,EAAE;AACnBC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AADU;AAJyB,CAAnB,CAAD,CAA5B;;AASA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AAAA;;AAChC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,CAAC,CAAF,CAAxC;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMqB,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWlB,mBAAmB,CAAC,OAAD,CAAnB,IAAgC,EAA3C,CAArB;AACA,QAAMmB,KAAK,GAAGrB,WAAW,CAAC,CAAC;AAAEqB,IAAAA;AAAF,GAAD,KAAoBA,KAArB,CAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EARgC,CAShC;AACA;AACA;AACA;;AAEA,QAAMG,YAAY,GAAIC,EAAD,IAAgB;AACnCV,IAAAA,WAAW,CAACU,EAAD,CAAX;AACAC,IAAAA,WAAW;AACZ,GAHD;;AAKA,QAAMC,UAAU,GAAG,CAACF,EAAD,EAAaG,IAAb,KAA8B;AAC/C,QAAIC,IAAI,GAAGR,KAAK,CAACS,IAAN,CAAYC,IAAD,IAAeA,IAAI,CAACN,EAAL,KAAYA,EAAtC,CAAX,CAD+C,CAE/C;;AACAd,IAAAA,KAAK,CAACqB,OAAN,CAAcC,IAAd,CAAoB,IAAGL,IAAK,IAAGH,EAAG,EAAlC;AACD,GAJD;;AAMA,QAAMC,WAAW,GAAG,MAAM;AACxBT,IAAAA,YAAY,CAAEiB,IAAD,IAAmB,CAACA,IAArB,CAAZ;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtBtB,IAAAA,QAAQ,CAACZ,gBAAgB,CAAE,IAAGa,QAAS,EAAd,CAAjB,CAAR;AACAY,IAAAA,WAAW;AACZ,GAHD;;AAKA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiED,CAnGD;;GAAMhB,S;UACYP,S,EACCJ,W,EAKHC,W;;;KAPVU,S;AAqGN,eAAeA,SAAf","sourcesContent":["import React, { Dispatch, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Theme, IconButton } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteUserAction,\n  usersListAction,\n  //   setActiveUserAction,\n} from \"../redux/actions/user\";\nimport { Delete, Edit, Visibility } from \"@material-ui/icons\";\n// import Alert from \"../components/common/Alert\";\nimport { getFromLocalStorage } from \"../services\";\nimport { USERS_LOADING } from \"../redux/actions/types\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  dashboard_container: {\n    padding: theme.spacing(5),\n  },\n}));\n\nconst Dashboard = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch<Dispatch<any>>();\n  const [activeId, setActiveId] = useState(-1);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const loggedInUser = JSON.parse(getFromLocalStorage(\"token\") || \"\");\n  const users = useSelector(({ users }: any) => users);\n  console.log(users);\n  //   useEffect(() => {\n  //     dispatch(usersListAction());\n  //     // eslint-disable-next-line\n  //   }, []);\n\n  const handleDelete = (id: number) => {\n    setActiveId(id);\n    toggleAlert();\n  };\n\n  const handleView = (id: number, path: string) => {\n    let user = users.find((item: any) => item.id === id);\n    // dispatch(setActiveUserAction(user));\n    props.history.push(`/${path}/${id}`);\n  };\n\n  const toggleAlert = () => {\n    setShowAlert((prev: Boolean) => !prev);\n  };\n\n  const onConfirm = () => {\n    dispatch(deleteUserAction(`/${activeId}`));\n    toggleAlert();\n  };\n\n  return (\n    <>\n      <div>hello</div>\n      {/* <Alert\n        open={showAlert}\n        message={\"Are you sure you want to delete this user ?\"}\n        onConfirm={onConfirm}\n        onCancel={toggleAlert}\n        showActions={true}\n      /> */}\n      {/* <Box className={classes.dashboard_container}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>First Name</TableCell>\n                <TableCell align=\"left\">Email</TableCell>\n                <TableCell align=\"left\">Address</TableCell>\n                <TableCell align=\"left\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users?.map((row: any) => (\n                <TableRow key={row.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.firstname}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.email}</TableCell>\n                  <TableCell align=\"left\">{row.address}</TableCell>\n                  <TableCell align=\"left\">\n                    {loggedInUser.role === \"admin\" && (\n                      <IconButton\n                        color=\"primary\"\n                        size=\"small\"\n                        aria-label=\"upload picture\"\n                        onClick={() => handleView(row.id, \"edit\")}\n                      >\n                        <Edit />\n                      </IconButton>\n                    )}\n                    <IconButton\n                      color=\"primary\"\n                      size=\"small\"\n                      aria-label=\"upload picture\"\n                      onClick={() => handleView(row.id, \"view\")}\n                    >\n                      <Visibility />\n                    </IconButton>\n                    <IconButton\n                      color=\"secondary\"\n                      size=\"small\"\n                      aria-label=\"upload picture\"\n                      onClick={() => handleDelete(row.id)}\n                    >\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box> */}\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}