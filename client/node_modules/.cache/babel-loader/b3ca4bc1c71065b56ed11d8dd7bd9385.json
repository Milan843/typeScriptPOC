{"ast":null,"code":"import axios from '../../api/axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGOUT } from './types';\nimport { returnErrors } from './error';\nexport const loginAction = payload => async dispatch => {\n  try {// const res:AxiosResponse<any> = await Api.apiGet(\"login\", payload)\n    // setLocalStorage(\"token\", JSON.stringify({id: res.data[0].id, name: res.data[0].firstname}));\n    // dispatch({ type: LOGIN_SUCCESS, payload: res.data[0]})\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const registerAction = (payload, cb) => dispatch => {\n  try {\n    const data = JSON.stringify({ ...payload\n    });\n    console.log(data, \"payloadd\");\n    axios({\n      method: 'post',\n      url: '/signup',\n      data,\n      headers: {\n        'Content-type': 'application/json'\n      }\n    }) // .post('/api/auth/register', body, config)\n    .then(res => dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res\n    })).catch(err => {\n      var _err$data;\n\n      dispatch(returnErrors({\n        msg: (_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.message\n      }, err.status, 'REGISTER_FAIL'));\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }); // await Api.apiPost(\"signUp\", payload)\n    // cb();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const logoutAction = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: LOGOUT\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/redux/actions/auth.ts"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","LOGOUT","returnErrors","loginAction","payload","dispatch","err","console","log","registerAction","cb","data","JSON","stringify","method","url","headers","then","res","type","catch","msg","message","status","logoutAction","localStorage","removeItem"],"mappings":"AAGA,OAAOA,KAAP,MAAkB,iBAAlB;AAGA,SAAwBC,gBAAxB,EAA0CC,aAA1C,EAAyDC,MAAzD,QAAuE,SAAvE;AACA,SAASC,YAAT,QAA6B,SAA7B;AAIA,OAAO,MAAMC,WAA+B,GAAIC,OAAD,IAAoB,MAAOC,QAAP,IAAuC;AACtG,MAAI,CACA;AACA;AACA;AACH,GAJD,CAIE,OAAOC,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CARM;AAUP,OAAO,MAAMG,cAAc,GAAG,CAACL,OAAD,EAAiBM,EAAjB,KAC7BL,QAAD,IAAiC;AAC7B,MAAI;AAEA,UAAMM,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe,EAAC,GAAGT;AAAJ,KAAf,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EAAkB,UAAlB;AAEEb,IAAAA,KAAK,CAAC;AACJgB,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,SAFD;AAGJJ,MAAAA,IAHI;AAIJK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAJL,KAAD,CAAL,CAQE;AARF,KASGC,IATH,CASSC,GAAD,IACJb,QAAQ,CAAC;AACPc,MAAAA,IAAI,EAAEpB,gBADC;AAEPK,MAAAA,OAAO,EAAEc;AAFF,KAAD,CAVZ,EAgBGE,KAhBH,CAgBUd,GAAD,IAAS;AAAA;;AACdD,MAAAA,QAAQ,CAACH,YAAY,CAAC;AAACmB,QAAAA,GAAG,eAACf,GAAG,CAACK,IAAL,8CAAC,UAAUW;AAAf,OAAD,EAA0BhB,GAAG,CAACiB,MAA9B,EAAsC,eAAtC,CAAb,CAAR;AACAlB,MAAAA,QAAQ,CAAC;AACPc,QAAAA,IAAI,EAAEnB;AADC,OAAD,CAAR;AAGD,KArBH,EALF,CA4BA;AACA;AACH,GA9BD,CA8BE,OAAOM,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAnCM;AAqCP,OAAO,MAAMkB,YAAwB,GAAG,MAAM,MAAOnB,QAAP,IAAuC;AACjF,MAAI;AACAoB,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACArB,IAAAA,QAAQ,CAAC;AAAEc,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;AACH,GAHD,CAGE,OAAOK,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAPM","sourcesContent":["import { AxiosResponse } from 'axios';\nimport { Dispatch } from 'redux';\nimport Api from '../../api/index';\nimport axios from '../../api/axios';\nimport { setLocalStorage } from '../../services';\nimport { IAction } from '../../utils/interfaces';\nimport { LOGIN_SUCCESS, REGISTER_SUCCESS, REGISTER_FAIL, LOGOUT } from './types';\nimport { returnErrors } from './error';\n\nimport Users from \"../../db/users.json\"\n\nexport const loginAction: (a:string) => void = (payload:string) => async (dispatch: Dispatch<IAction>) => {\n    try {\n        // const res:AxiosResponse<any> = await Api.apiGet(\"login\", payload)\n        // setLocalStorage(\"token\", JSON.stringify({id: res.data[0].id, name: res.data[0].firstname}));\n        // dispatch({ type: LOGIN_SUCCESS, payload: res.data[0]})\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const registerAction = (payload:object, cb: Function)  =>\n(dispatch: Dispatch<IAction>) => {\n    try {\n        \n        const data = JSON.stringify({...payload});\n        console.log(data, \"payloadd\");\n      \n          axios({\n            method: 'post',\n            url: '/signup',\n            data,\n            headers: {\n              'Content-type': 'application/json',\n            },\n          })\n            // .post('/api/auth/register', body, config)\n            .then((res) =>\n              dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res,\n              })\n                \n            )\n            .catch((err) => {\n              dispatch(returnErrors({msg:err.data?.message}, err.status, 'REGISTER_FAIL'));\n              dispatch({\n                type: REGISTER_FAIL,\n              });\n            });\n        \n        // await Api.apiPost(\"signUp\", payload)\n        // cb();\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const logoutAction: () => void = () => async (dispatch: Dispatch<IAction>) => {\n    try {\n        localStorage.removeItem(\"token\");\n        dispatch({ type: LOGOUT })\n    } catch (err) {\n        console.log(err);\n    }\n}"]},"metadata":{},"sourceType":"module"}