{"ast":null,"code":"var _jsxFileName = \"/home/milan/Milan/Projects/typescript-poc/client/src/ProtectedRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { checkAuth } from \"./services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const isAuthenticated = useSelector(({\n    auth\n  }) => auth.isAuth);\n  return isAuthenticated || checkAuth() ? /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    component: Component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProtectedRoute, \"Tis/laFBs1mUsdamrhCn/+4kssg=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/ProtectedRoute.tsx"],"names":["React","Route","Redirect","useSelector","checkAuth","ProtectedRoute","component","Component","rest","isAuthenticated","auth","isAuth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAA4C,kBAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,SAAT,QAA0B,YAA1B;;;AAMA,MAAMC,cAA6C,GAAG,CAAC;AACrDC,EAAAA,SAAS,EAAEC,SAD0C;AAErD,KAAGC;AAFkD,CAAD,KAGhD;AAAA;;AACJ,QAAMC,eAAe,GAAGN,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD,KAA0BA,IAAI,CAACC,MAAhC,CAAnC;AAEA,SAAOF,eAAe,IAAIL,SAAS,EAA5B,gBACL,QAAC,KAAD,OAAWI,IAAX;AAAiB,IAAA,SAAS,EAAED;AAA5B;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,CAXD;;GAAMF,c;UAIoBF,W;;;KAJpBE,c;AAaN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { IRootState } from \"./redux/reducers\";\nimport { checkAuth } from \"./services\";\n\nexport type ProtectedRouteProps = {\n  component: React.ComponentType<any>;\n} & RouteProps;\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  const isAuthenticated = useSelector(({ auth }: IRootState) => auth.isAuth);\n\n  return isAuthenticated || checkAuth() ? (\n    <Route {...rest} component={Component} />\n  ) : (\n    <Redirect to=\"/\" />\n  );\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}