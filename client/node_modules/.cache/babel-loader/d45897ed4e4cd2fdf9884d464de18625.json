{"ast":null,"code":"var _jsxFileName = \"/home/milan/Milan/Projects/typescript-poc/client/src/components/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, IconButton } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteUserAction, setActiveUserAction } from \"../redux/actions/user\";\nimport { Delete, Edit, Visibility } from \"@material-ui/icons\";\nimport Modal from \"./Modal\";\nimport { getUsers } from \"../redux/actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  dashboard_container: {\n    padding: theme.spacing(5)\n  }\n}));\n\nconst Dashboard = props => {\n  _s();\n\n  var _allUsers;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [activeId, setActiveId] = useState(-1);\n  const [showAlert, setShowAlert] = useState(false); //   const loggedInUser = JSON.parse(getFromLocalStorage(\"token\") || \"\");\n\n  const isAuthenticated = useSelector(({\n    auth\n  }) => auth);\n  console.log(isAuthenticated, \"isAuthenticated\");\n  let allUsers = [];\n  allUsers = useSelector(({\n    users\n  }) => users.users);\n  console.log(allUsers);\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n\n  const handleDelete = id => {\n    setActiveId(id);\n    toggleAlert();\n  };\n\n  const handleView = (id, path) => {\n    let user = allUsers.find(item => item._id === id);\n    dispatch(setActiveUserAction(user));\n    console.log(path, id, user, \"as\");\n    props.history.push(`/${path}/${id}`);\n  };\n\n  const toggleAlert = () => {\n    setShowAlert(prev => !prev);\n  };\n\n  const onConfirm = () => {\n    dispatch(deleteUserAction(`/${activeId}`));\n    toggleAlert();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ALL USERS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: showAlert,\n      message: \"Are you sure you want to delete this user ?\",\n      onConfirm: onConfirm,\n      onCancel: toggleAlert,\n      showActions: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.dashboard_container,\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: (_allUsers = allUsers) === null || _allUsers === void 0 ? void 0 : _allUsers.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  size: \"small\",\n                  \"aria-label\": \"upload picture\",\n                  onClick: () => handleView(row._id, \"update\"),\n                  children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  size: \"small\",\n                  \"aria-label\": \"upload picture\",\n                  onClick: () => handleView(row._id, \"view\"),\n                  children: /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"secondary\",\n                  size: \"small\",\n                  \"aria-label\": \"upload picture\" // onClick={() => handleDelete(row._id)}\n                  ,\n                  children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this)]\n            }, row._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"AjXFzv15c6JTk8yVLIo4Bbu2ilE=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/components/Dashboard.tsx"],"names":["React","useState","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Box","IconButton","useEffect","useDispatch","useSelector","deleteUserAction","setActiveUserAction","Delete","Edit","Visibility","Modal","getUsers","useStyles","theme","table","minWidth","dashboard_container","padding","spacing","Dashboard","props","classes","dispatch","activeId","setActiveId","showAlert","setShowAlert","isAuthenticated","auth","console","log","allUsers","users","handleDelete","id","toggleAlert","handleView","path","user","find","item","_id","history","push","prev","onConfirm","map","row","firstName","email","address"],"mappings":"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","sourcesContent":["import React, { Dispatch, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Box, Theme, IconButton } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteUserAction,\n  usersListAction,\n  setActiveUserAction,\n} from \"../redux/actions/user\";\nimport { Delete, Edit, Visibility } from \"@material-ui/icons\";\nimport Modal from \"./Modal\";\nimport { getFromLocalStorage } from \"../services\";\nimport { USERS_LOADING } from \"../redux/actions/types\";\nimport { getUsers } from \"../redux/actions/user\";\nimport { IUserListDashBoard } from \"../utils/interfaces\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  table: {\n    minWidth: 650,\n  },\n  dashboard_container: {\n    padding: theme.spacing(5),\n  },\n}));\n\nconst Dashboard = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch<Dispatch<any>>();\n  const [activeId, setActiveId] = useState(-1);\n  const [showAlert, setShowAlert] = useState(false);\n\n  //   const loggedInUser = JSON.parse(getFromLocalStorage(\"token\") || \"\");\n  const isAuthenticated = useSelector(({ auth }: any) => auth);\n\n  console.log(isAuthenticated, \"isAuthenticated\");\n  let allUsers: any[] = [];\n  allUsers = useSelector(({ users }: any) => users.users);\n  console.log(allUsers);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, []);\n\n  const handleDelete = (id: number) => {\n    setActiveId(id);\n    toggleAlert();\n  };\n\n  const handleView = (id: number, path: string) => {\n    let user = allUsers.find((item: any) => item._id === id);\n    dispatch(setActiveUserAction(user));\n    console.log(path, id, user, \"as\");\n    props.history.push(`/${path}/${id}`);\n  };\n\n  const toggleAlert = () => {\n    setShowAlert((prev: Boolean) => !prev);\n  };\n\n  const onConfirm = () => {\n    dispatch(deleteUserAction(`/${activeId}`));\n    toggleAlert();\n  };\n\n  return (\n    <>\n      <div>\n        <h1>ALL USERS</h1>\n      </div>\n      <Modal\n        open={showAlert}\n        message={\"Are you sure you want to delete this user ?\"}\n        onConfirm={onConfirm}\n        onCancel={toggleAlert}\n        showActions={true}\n      />\n      <Box className={classes.dashboard_container}>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>First Name</TableCell>\n                <TableCell align=\"left\">Email</TableCell>\n                <TableCell align=\"left\">Address</TableCell>\n                <TableCell align=\"left\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {allUsers?.map((row: any) => (\n                <TableRow key={row._id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.firstName}\n                  </TableCell>\n                  <TableCell align=\"left\">{row.email}</TableCell>\n                  <TableCell align=\"left\">{row.address}</TableCell>\n                  <TableCell align=\"left\">\n                    <IconButton\n                      color=\"primary\"\n                      size=\"small\"\n                      aria-label=\"upload picture\"\n                      onClick={() => handleView(row._id, \"update\")}\n                    >\n                      <Edit />\n                    </IconButton>\n\n                    <IconButton\n                      color=\"primary\"\n                      size=\"small\"\n                      aria-label=\"upload picture\"\n                      onClick={() => handleView(row._id, \"view\")}\n                    >\n                      <Visibility />\n                    </IconButton>\n                    <IconButton\n                      color=\"secondary\"\n                      size=\"small\"\n                      aria-label=\"upload picture\"\n                      // onClick={() => handleDelete(row._id)}\n                    >\n                      <Delete />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Box>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}