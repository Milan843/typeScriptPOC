{"ast":null,"code":"var _jsxFileName = \"/home/milan/Milan/Projects/typescript-poc/client/src/components/UserDashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createStyles, makeStyles } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { useFormik } from \"formik\";\nimport { userSchema } from \"../utils/yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: 400,\n    margin: `${theme.spacing(0)} auto`\n  },\n  registerBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: \"center\",\n    background: \"#212121\",\n    color: \"#fff\"\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n}));\n\nconst UserDashboard = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [userImage, setUserImage] = useState(\"\");\n  const [isEdit, setIsEdit] = useState(false);\n  const selectedUser = useSelector(({\n    users\n  }) => users.activeUser);\n  useEffect(() => {\n    if (props.location.pathname.includes(\"update\")) {\n      setIsEdit(true);\n    }\n\n    if (!selectedUser) {\n      const id = props.match.params.userId; //   dispatch(getUserById(`/${id}`));\n    }\n\n    if (selectedUser.userImage) {\n      setUserImage(selectedUser.userImage);\n    }\n  }, [selectedUser]);\n  console.log(selectedUser, \"selectedUser\");\n\n  const handleImage = e => {\n    if (!e.target.files) {\n      return;\n    }\n\n    const file = e.target.files[0]; // const isValidFile = isUserImage(file);\n    // if (!isValidFile) {\n    //   setFormError({\n    //     ...formError,\n    //     userImage: { isValid: false, errorMsg: \"Enter valid image\" },\n    //     isFormValid: false,\n    //   });\n    //   return;\n    // }\n    // setFormError({\n    //   ...formError,\n    //   userImage: { isValid: true, errorMsg: \"Enter valid image\" },\n    //   isFormValid: true,\n    // });\n\n    const reader = new FileReader();\n\n    reader.onload = function (dataa) {\n      let dataURL = dataa.target.result;\n      dataURL = dataURL.replace(\";base64\", `;name=${file.name};base64`);\n      setUserImage(dataURL); // setData({\n      // \t...data,\n      // \tuserImage: dataURL,\n      // });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const initialValues = {\n    firstName: selectedUser.firstName || \"\",\n    email: selectedUser.email || \"\",\n    mobileNumber: selectedUser.mobileNumber || \"\",\n    address: selectedUser.address || \"\",\n    description: selectedUser.description || \"\"\n  };\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: userSchema,\n    onSubmit: values => {\n      let payload = { ...values,\n        userImage: userImage\n      }; //   dispatch(\n      //     registerAction(payload, () => {\n      //       props.history.push(\"/\");\n      //     })\n      //   );\n\n      console.log(payload, \"submit\");\n    }\n  });\n  console.log(formik);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.container,\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: classes.header,\n        title: \"USER DETAILS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"firstName\",\n            type: \"text\",\n            label: \"firstName\",\n            placeholder: \"firstName\",\n            margin: \"normal\",\n            value: formik.values.firstName,\n            onChange: formik.handleChange,\n            helperText: formik.errors.firstName,\n            disabled: !isEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"email\",\n            type: \"email\",\n            label: \"email\",\n            placeholder: \"email\",\n            margin: \"normal\",\n            value: formik.values.email,\n            onChange: formik.handleChange,\n            helperText: formik.errors.email,\n            disabled: !isEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"mobileNumber\",\n            type: \"text\",\n            label: \"Mobile Number\",\n            placeholder: \"Mobile Number\",\n            margin: \"normal\",\n            value: formik.values.mobileNumber,\n            onChange: formik.handleChange,\n            helperText: formik.errors.mobileNumber,\n            disabled: !isEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"address\",\n            type: \"text\",\n            label: \"Address\",\n            placeholder: \"Address\",\n            margin: \"normal\",\n            value: formik.values.address,\n            onChange: formik.handleChange,\n            helperText: formik.errors.address,\n            disabled: !isEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"description\",\n            type: \"text\",\n            label: \"Description\",\n            placeholder: \"Description\",\n            margin: \"normal\",\n            value: formik.values.description,\n            onChange: formik.handleChange,\n            helperText: formik.errors.description,\n            disabled: !isEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), isEdit && /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"userImage\",\n          name: \"userImage\",\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), userImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"100%\",\n          src: userImage,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), isEdit && /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          color: \"secondary\",\n          className: classes.registerBtn,\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this); //   }}\n  // </Formik>\n  //   );\n};\n\n_s(UserDashboard, \"/pYW6c5sM4XdkIWXN+HiBQBaCg4=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useFormik];\n});\n\n_c = UserDashboard;\nexport default UserDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"sources":["/home/milan/Milan/Projects/typescript-poc/client/src/components/UserDashboard.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","createStyles","makeStyles","TextField","Card","CardContent","CardActions","CardHeader","Button","useFormik","userSchema","useStyles","theme","container","display","flexWrap","width","margin","spacing","registerBtn","marginTop","flexGrow","header","textAlign","background","color","card","UserDashboard","props","classes","dispatch","userImage","setUserImage","isEdit","setIsEdit","selectedUser","users","activeUser","location","pathname","includes","id","match","params","userId","console","log","handleImage","e","target","files","file","reader","FileReader","onload","dataa","dataURL","result","replace","name","readAsDataURL","initialValues","firstName","email","mobileNumber","address","description","formik","validationSchema","onSubmit","values","payload","handleSubmit","handleChange","errors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Dispatch } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createStyles, makeStyles, Theme, Typography } from \"@material-ui/core\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport { useFormik } from \"formik\";\nimport { userSchema } from \"../utils/yup\";\nimport { registerAction } from \"../redux/actions/auth\";\nimport { getUsers } from \"../redux/actions/user\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      width: 400,\n      margin: `${theme.spacing(0)} auto`,\n    },\n    registerBtn: {\n      marginTop: theme.spacing(2),\n      flexGrow: 1,\n    },\n    header: {\n      textAlign: \"center\",\n      background: \"#212121\",\n      color: \"#fff\",\n    },\n    card: {\n      marginTop: theme.spacing(10),\n    },\n  })\n);\n\ninterface Values {\n  firstName: string;\n  email: string;\n  mobileNumber: string;\n  address: string;\n  description: string;\n  userImage: string;\n}\n\nconst UserDashboard: React.FC = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch<Dispatch<any>>();\n  const [userImage, setUserImage] = useState(\"\");\n  const [isEdit, setIsEdit] = useState<any>(false);\n  const selectedUser = useSelector(({ users }: any) => users.activeUser);\n\n  useEffect(() => {\n    if (props.location.pathname.includes(\"update\")) {\n      setIsEdit(true);\n    }\n    if (!selectedUser) {\n      const id = props.match.params.userId;\n      //   dispatch(getUserById(`/${id}`));\n    }\n    if (selectedUser.userImage) {\n      setUserImage(selectedUser.userImage);\n    }\n  }, [selectedUser]);\n\n  console.log(selectedUser, \"selectedUser\");\n  const handleImage = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!e.target.files) {\n      return;\n    }\n    const file = e.target.files[0];\n    // const isValidFile = isUserImage(file);\n    // if (!isValidFile) {\n    //   setFormError({\n    //     ...formError,\n    //     userImage: { isValid: false, errorMsg: \"Enter valid image\" },\n    //     isFormValid: false,\n    //   });\n\n    //   return;\n    // }\n    // setFormError({\n    //   ...formError,\n    //   userImage: { isValid: true, errorMsg: \"Enter valid image\" },\n    //   isFormValid: true,\n    // });\n\n    const reader = new FileReader();\n\n    reader.onload = function (dataa: any) {\n      let dataURL = dataa.target.result;\n      dataURL = dataURL.replace(\";base64\", `;name=${file.name};base64`);\n      setUserImage(dataURL);\n\n      // setData({\n      // \t...data,\n      // \tuserImage: dataURL,\n      // });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  const initialValues = {\n    firstName: selectedUser.firstName || \"\",\n    email: selectedUser.email || \"\",\n    mobileNumber: selectedUser.mobileNumber || \"\",\n    address: selectedUser.address || \"\",\n    description: selectedUser.description || \"\",\n  };\n  const formik: any = useFormik<any>({\n    initialValues: initialValues,\n    validationSchema: userSchema,\n    onSubmit: (values: Values) => {\n      let payload = { ...values, userImage: userImage };\n      //   dispatch(\n      //     registerAction(payload, () => {\n      //       props.history.push(\"/\");\n      //     })\n      //   );\n      console.log(payload, \"submit\");\n    },\n  });\n  console.log(formik);\n  return (\n    <form className={classes.container} onSubmit={formik.handleSubmit}>\n      <Card className={classes.card}>\n        <CardHeader className={classes.header} title=\"USER DETAILS\" />\n        <CardContent>\n          <div>\n            <TextField\n              fullWidth\n              id=\"firstName\"\n              type=\"text\"\n              label=\"firstName\"\n              placeholder=\"firstName\"\n              margin=\"normal\"\n              value={formik.values.firstName}\n              onChange={formik.handleChange}\n              helperText={formik.errors.firstName}\n              disabled={!isEdit}\n            />\n            <TextField\n              fullWidth\n              id=\"email\"\n              type=\"email\"\n              label=\"email\"\n              placeholder=\"email\"\n              margin=\"normal\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n              helperText={formik.errors.email}\n              disabled={!isEdit}\n            />\n            <TextField\n              fullWidth\n              id=\"mobileNumber\"\n              type=\"text\"\n              label=\"Mobile Number\"\n              placeholder=\"Mobile Number\"\n              margin=\"normal\"\n              value={formik.values.mobileNumber}\n              onChange={formik.handleChange}\n              helperText={formik.errors.mobileNumber}\n              disabled={!isEdit}\n            />\n            <TextField\n              fullWidth\n              id=\"address\"\n              type=\"text\"\n              label=\"Address\"\n              placeholder=\"Address\"\n              margin=\"normal\"\n              value={formik.values.address}\n              onChange={formik.handleChange}\n              helperText={formik.errors.address}\n              disabled={!isEdit}\n            />\n\n            <TextField\n              fullWidth\n              id=\"description\"\n              type=\"text\"\n              label=\"Description\"\n              placeholder=\"Description\"\n              margin=\"normal\"\n              value={formik.values.description}\n              onChange={formik.handleChange}\n              helperText={formik.errors.description}\n              disabled={!isEdit}\n            />\n          </div>\n          {isEdit && (\n            <input\n              id=\"userImage\"\n              name=\"userImage\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleImage}\n            />\n          )}\n          {userImage && <img width=\"100%\" src={userImage} alt=\"\" />}\n        </CardContent>\n\n        {isEdit && (\n          <CardActions>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"secondary\"\n              className={classes.registerBtn}\n              type=\"submit\"\n            >\n              Update\n            </Button>\n          </CardActions>\n        )}\n      </Card>\n    </form>\n  );\n  //   }}\n  // </Formik>\n  //   );\n};\n\nexport default UserDashboard;\n"]},"metadata":{},"sourceType":"module"}